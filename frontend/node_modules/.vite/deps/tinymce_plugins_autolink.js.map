{
  "version": 3,
  "sources": ["../../tinymce/plugins/autolink/plugin.js", "../../tinymce/plugins/autolink/index.js"],
  "sourcesContent": ["/**\n * TinyMCE version 7.9.1 (2025-05-29)\n */\n\n(function () {\n    'use strict';\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    /* eslint-disable @typescript-eslint/no-wrapper-object-types */\n    const hasProto = (v, constructor, predicate) => {\n        var _a;\n        if (predicate(v, constructor.prototype)) {\n            return true;\n        }\n        else {\n            // String-based fallback time\n            return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n        }\n    };\n    const typeOf = (x) => {\n        const t = typeof x;\n        if (x === null) {\n            return 'null';\n        }\n        else if (t === 'object' && Array.isArray(x)) {\n            return 'array';\n        }\n        else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n            return 'string';\n        }\n        else {\n            return t;\n        }\n    };\n    const isType = (type) => (value) => typeOf(value) === type;\n    const eq = (t) => (a) => t === a;\n    const isString = isType('string');\n    const isUndefined = eq(undefined);\n    const isNullable = (a) => a === null || a === undefined;\n    const isNonNullable = (a) => !isNullable(a);\n\n    const not = (f) => (t) => !f(t);\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const hasOwnProperty = Object.hasOwnProperty;\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    const contains = (str, substr, start = 0, end) => {\n        const idx = str.indexOf(substr, start);\n        if (idx !== -1) {\n            return isUndefined(end) ? true : idx + substr.length <= end;\n        }\n        else {\n            return false;\n        }\n    };\n    /** Does 'str' start with 'prefix'?\n     *  Note: all strings start with the empty string.\n     *        More formally, for all strings x, startsWith(x, \"\").\n     *        This is so that for all strings x and y, startsWith(y + x, y)\n     */\n    const startsWith = (str, prefix) => {\n        return checkRange(str, prefix, 0);\n    };\n\n    const zeroWidth = '\\uFEFF';\n    const isZwsp = (char) => char === zeroWidth;\n    const removeZwsp = (s) => s.replace(/\\uFEFF/g, '');\n\n    /*\n      The RegEx parses the following components (https://www.rfc-editor.org/rfc/rfc3986.txt):\n\n        scheme:[//[user:password@]host[:port]][/]path[?query][#fragment]\n\n              foo://example.com:8042/over/there?name=ferret#nose\n              \\_/   \\______________/\\_________/ \\_________/ \\__/\n              |           |            |            |        |\n            scheme     authority       path        query   fragment\n\n      Originally from:\n        http://blog.mattheworiordan.com/post/13174566389/url-regular-expression-for-links-with-or-without-the\n\n      Modified to:\n      - include port numbers\n      - allow full stops in email addresses\n      - allow [-.~*+=!&;:'%@?^${}(),\\/\\w] after the #\n      - allow [-.~*+=!&;:'%@?^${}(),\\/\\w] after the ?\n      - move allow -_.~*+=!&;:'%@?^${}() in email usernames to the first @ match (TBIO-4809)\n      - enforce domains to be [A-Za-z0-9-]+(?:\\.[A-Za-z0-9-]+)* so they can't end in a period (TBIO-4809)\n      - removed a bunch of escaping, made every group non-capturing (during TBIO-4809)\n      - colons are only valid when followed directly by // or some text and then @ (TBIO-4867)\n      - only include the fragment '#' if it has 1 or more trailing matches\n      - only include the query '?' if it has 1 or more trailing matches\n      - allow commas in URL path\n      - exclude trailing comma and period in URL path\n      - allow up to 15 character schemes including all valid characters from the spec https://url.spec.whatwg.org/#url-scheme-string (TINY-5074)\n      - changed instances of 0-9 to be \\d (TINY-5074)\n      - reduced duplication (TINY-5074)\n      - allow [*!;:'@$] in the path segment as they are valid characters per the spec: https://url.spec.whatwg.org/#url-path-segment-string (TINY-8069)\n\n    (?:\n      (?:\n        [A-Za-z][A-Za-z\\d.+-]{0,14}:\\/\\/(?:[-.~*+=!&;:'%@?^${}(),\\w]+@)?\n        | www\\.\n        | [-;:&=+$,.\\w]+@\n      )\n      [A-Za-z\\d-]+\n      (?:\\.[A-Za-z\\d-]+)*\n    )\n    (?::\\d+)?\n    (?:\n      \\/\n      (?:\n         [-.~*+=!;:'%@$(),\\/\\w]*[-~*+=%@$()\\/\\w]\n       )?\n    )?\n    (?:\n      \\?\n      (?:\n        [-.~*+=!&;:'%@?^${}(),\\/\\w]+\n      )\n    )?\n    (?:\n      #\n      (?:\n        [-.~*+=!&;:'%@?^${}(),\\/\\w]+\n      )\n    )?\n    */\n    const link = () => \n    // eslint-disable-next-line max-len\n    /(?:[A-Za-z][A-Za-z\\d.+-]{0,14}:\\/\\/(?:[-.~*+=!&;:'%@?^${}(),\\w]+@)?|www\\.|[-;:&=+$,.\\w]+@)[A-Za-z\\d-]+(?:\\.[A-Za-z\\d-]+)*(?::\\d+)?(?:\\/(?:[-.~*+=!;:'%@$(),\\/\\w]*[-~*+=%@$()\\/\\w])?)?(?:\\?(?:[-.~*+=!&;:'%@?^${}(),\\/\\w]+))?(?:#(?:[-.~*+=!&;:'%@?^${}(),\\/\\w]+))?/g;\n\n    const option = (name) => (editor) => editor.options.get(name);\n    const register = (editor) => {\n        const registerOption = editor.options.register;\n        registerOption('autolink_pattern', {\n            processor: 'regexp',\n            // Use the Polaris link detection, however for autolink we need to make it be an exact match\n            default: new RegExp('^' + link().source + '$', 'i')\n        });\n        registerOption('link_default_target', {\n            processor: 'string'\n        });\n        registerOption('link_default_protocol', {\n            processor: 'string',\n            default: 'https'\n        });\n    };\n    const getAutoLinkPattern = option('autolink_pattern');\n    const getDefaultLinkTarget = option('link_default_target');\n    const getDefaultLinkProtocol = option('link_default_protocol');\n    const allowUnsafeLinkTarget = option('allow_unsafe_link_target');\n\n    var global = tinymce.util.Tools.resolve('tinymce.dom.TextSeeker');\n\n    const isTextNode = (node) => node.nodeType === 3;\n    const isElement = (node) => node.nodeType === 1;\n    const isBracketOrSpace = (char) => /^[(\\[{ \\u00a0]$/.test(char);\n    // Note: This is similar to the Polaris protocol detection, except it also handles `mailto` and any length scheme\n    const hasProtocol = (url) => /^([A-Za-z][A-Za-z\\d.+-]*:\\/\\/)|mailto:/.test(url);\n    // A limited list of punctuation characters that might be used after a link\n    const isPunctuation = (char) => /[?!,.;:]/.test(char);\n    const findChar = (text, index, predicate) => {\n        for (let i = index - 1; i >= 0; i--) {\n            const char = text.charAt(i);\n            if (!isZwsp(char) && predicate(char)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    const freefallRtl = (container, offset) => {\n        let tempNode = container;\n        let tempOffset = offset;\n        while (isElement(tempNode) && tempNode.childNodes[tempOffset]) {\n            tempNode = tempNode.childNodes[tempOffset];\n            tempOffset = isTextNode(tempNode) ? tempNode.data.length : tempNode.childNodes.length;\n        }\n        return { container: tempNode, offset: tempOffset };\n    };\n\n    const parseCurrentLine = (editor, offset) => {\n        var _a;\n        const voidElements = editor.schema.getVoidElements();\n        const autoLinkPattern = getAutoLinkPattern(editor);\n        const { dom, selection } = editor;\n        // Never create a link when we are inside a link\n        if (dom.getParent(selection.getNode(), 'a[href]') !== null || editor.mode.isReadOnly()) {\n            return null;\n        }\n        const rng = selection.getRng();\n        const textSeeker = global(dom, (node) => {\n            return dom.isBlock(node) || has(voidElements, node.nodeName.toLowerCase()) || dom.getContentEditable(node) === 'false' || dom.getParent(node, 'a[href]') !== null;\n        });\n        // Descend down the end container to find the text node\n        const { container: endContainer, offset: endOffset } = freefallRtl(rng.endContainer, rng.endOffset);\n        // Find the root container to use when walking\n        const root = (_a = dom.getParent(endContainer, dom.isBlock)) !== null && _a !== void 0 ? _a : dom.getRoot();\n        // Move the selection backwards to the start of the potential URL to account for the pressed character\n        // while also excluding the last full stop from a word like \"www.site.com.\"\n        const endSpot = textSeeker.backwards(endContainer, endOffset + offset, (node, offset) => {\n            const text = node.data;\n            const idx = findChar(text, offset, not(isBracketOrSpace));\n            // Move forward one so the offset is after the found character unless the found char is a punctuation char\n            return idx === -1 || isPunctuation(text[idx]) ? idx : idx + 1;\n        }, root);\n        if (!endSpot) {\n            return null;\n        }\n        // Walk backwards until we find a boundary or a bracket/space\n        let lastTextNode = endSpot.container;\n        const startSpot = textSeeker.backwards(endSpot.container, endSpot.offset, (node, offset) => {\n            lastTextNode = node;\n            const idx = findChar(node.data, offset, isBracketOrSpace);\n            // Move forward one so that the offset is after the bracket/space\n            return idx === -1 ? idx : idx + 1;\n        }, root);\n        const newRng = dom.createRng();\n        if (!startSpot) {\n            newRng.setStart(lastTextNode, 0);\n        }\n        else {\n            newRng.setStart(startSpot.container, startSpot.offset);\n        }\n        newRng.setEnd(endSpot.container, endSpot.offset);\n        const rngText = removeZwsp(newRng.toString());\n        const matches = rngText.match(autoLinkPattern);\n        if (matches) {\n            let url = matches[0];\n            if (startsWith(url, 'www.')) {\n                const protocol = getDefaultLinkProtocol(editor);\n                url = protocol + '://' + url;\n            }\n            else if (contains(url, '@') && !hasProtocol(url)) {\n                url = 'mailto:' + url;\n            }\n            return { rng: newRng, url };\n        }\n        else {\n            return null;\n        }\n    };\n    const convertToLink = (editor, result) => {\n        const { dom, selection } = editor;\n        const { rng, url } = result;\n        const bookmark = selection.getBookmark();\n        selection.setRng(rng);\n        // Needs to be a native createlink command since this is executed in a keypress event handler\n        // so the pending character that is to be inserted needs to be inserted after the link. That will not\n        // happen if we use the formatter create link version. Since we're using the native command\n        // then we also need to ensure the exec command events are fired for backwards compatibility.\n        const command = 'createlink';\n        const args = { command, ui: false, value: url };\n        const beforeExecEvent = editor.dispatch('BeforeExecCommand', args);\n        if (!beforeExecEvent.isDefaultPrevented()) {\n            editor.getDoc().execCommand(command, false, url);\n            editor.dispatch('ExecCommand', args);\n            const defaultLinkTarget = getDefaultLinkTarget(editor);\n            if (isString(defaultLinkTarget)) {\n                const anchor = selection.getNode();\n                dom.setAttrib(anchor, 'target', defaultLinkTarget);\n                // Ensure noopener is added for blank targets to prevent window opener attacks\n                if (defaultLinkTarget === '_blank' && !allowUnsafeLinkTarget(editor)) {\n                    dom.setAttrib(anchor, 'rel', 'noopener');\n                }\n            }\n        }\n        selection.moveToBookmark(bookmark);\n        editor.nodeChanged();\n    };\n    const handleSpacebar = (editor) => {\n        const result = parseCurrentLine(editor, -1);\n        if (isNonNullable(result)) {\n            convertToLink(editor, result);\n        }\n    };\n    const handleBracket = handleSpacebar;\n    const handleEnter = (editor) => {\n        const result = parseCurrentLine(editor, 0);\n        if (isNonNullable(result)) {\n            convertToLink(editor, result);\n        }\n    };\n    const setup = (editor) => {\n        editor.on('keydown', (e) => {\n            if (e.keyCode === 13 && !e.isDefaultPrevented()) {\n                handleEnter(editor);\n            }\n        });\n        editor.on('keyup', (e) => {\n            if (e.keyCode === 32) {\n                handleSpacebar(editor);\n                // One of the closing bracket keys: ), ] or }\n            }\n            else if (e.keyCode === 48 && e.shiftKey || e.keyCode === 221) {\n                handleBracket(editor);\n            }\n        });\n    };\n\n    var Plugin = () => {\n        global$1.add('autolink', (editor) => {\n            register(editor);\n            setup(editor);\n        });\n    };\n\n    Plugin();\n    /** *****\n     * DO NOT EXPORT ANYTHING\n     *\n     * IF YOU DO ROLLUP WILL LEAVE A GLOBAL ON THE PAGE\n     *******/\n\n})();\n", "// Exports the \"autolink\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/autolink')\n//   ES2015:\n//     import 'tinymce/plugins/autolink'\nrequire('./plugin.js');"],
  "mappings": "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",
  "names": ["offset"]
}
