{
  "version": 3,
  "sources": ["../../tinymce/plugins/media/plugin.js", "../../tinymce/plugins/media/index.js"],
  "sourcesContent": ["/**\n * TinyMCE version 7.9.1 (2025-05-29)\n */\n\n(function () {\n    'use strict';\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    /* eslint-disable @typescript-eslint/no-wrapper-object-types */\n    const hasProto = (v, constructor, predicate) => {\n        var _a;\n        if (predicate(v, constructor.prototype)) {\n            return true;\n        }\n        else {\n            // String-based fallback time\n            return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n        }\n    };\n    const typeOf = (x) => {\n        const t = typeof x;\n        if (x === null) {\n            return 'null';\n        }\n        else if (t === 'object' && Array.isArray(x)) {\n            return 'array';\n        }\n        else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n            return 'string';\n        }\n        else {\n            return t;\n        }\n    };\n    const isType = (type) => (value) => typeOf(value) === type;\n    const isSimpleType = (type) => (value) => typeof value === type;\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isArray = isType('array');\n    const isNullable = (a) => a === null || a === undefined;\n    const isNonNullable = (a) => !isNullable(a);\n    const isFunction = isSimpleType('function');\n\n    /**\n     * The `Optional` type represents a value (of any type) that potentially does\n     * not exist. Any `Optional<T>` can either be a `Some<T>` (in which case the\n     * value does exist) or a `None` (in which case the value does not exist). This\n     * module defines a whole lot of FP-inspired utility functions for dealing with\n     * `Optional` objects.\n     *\n     * Comparison with null or undefined:\n     * - We don't get fancy null coalescing operators with `Optional`\n     * - We do get fancy helper functions with `Optional`\n     * - `Optional` support nesting, and allow for the type to still be nullable (or\n     * another `Optional`)\n     * - There is no option to turn off strict-optional-checks like there is for\n     * strict-null-checks\n     */\n    class Optional {\n        // The internal representation has a `tag` and a `value`, but both are\n        // private: able to be console.logged, but not able to be accessed by code\n        constructor(tag, value) {\n            this.tag = tag;\n            this.value = value;\n        }\n        // --- Identities ---\n        /**\n         * Creates a new `Optional<T>` that **does** contain a value.\n         */\n        static some(value) {\n            return new Optional(true, value);\n        }\n        /**\n         * Create a new `Optional<T>` that **does not** contain a value. `T` can be\n         * any type because we don't actually have a `T`.\n         */\n        static none() {\n            return Optional.singletonNone;\n        }\n        /**\n         * Perform a transform on an `Optional` type. Regardless of whether this\n         * `Optional` contains a value or not, `fold` will return a value of type `U`.\n         * If this `Optional` does not contain a value, the `U` will be created by\n         * calling `onNone`. If this `Optional` does contain a value, the `U` will be\n         * created by calling `onSome`.\n         *\n         * For the FP enthusiasts in the room, this function:\n         * 1. Could be used to implement all of the functions below\n         * 2. Forms a catamorphism\n         */\n        fold(onNone, onSome) {\n            if (this.tag) {\n                return onSome(this.value);\n            }\n            else {\n                return onNone();\n            }\n        }\n        /**\n         * Determine if this `Optional` object contains a value.\n         */\n        isSome() {\n            return this.tag;\n        }\n        /**\n         * Determine if this `Optional` object **does not** contain a value.\n         */\n        isNone() {\n            return !this.tag;\n        }\n        // --- Functor (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value. If\n         * you provide a function to turn a T into a U, this is the function you use\n         * to turn an `Optional<T>` into an `Optional<U>`. If this **does** contain\n         * a value then the output will also contain a value (that value being the\n         * output of `mapper(this.value)`), and if this **does not** contain a value\n         * then neither will the output.\n         */\n        map(mapper) {\n            if (this.tag) {\n                return Optional.some(mapper(this.value));\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Monad (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value.\n         * Unlike `map`, here the transform itself also returns an `Optional`.\n         */\n        bind(binder) {\n            if (this.tag) {\n                return binder(this.value);\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Traversable (name stolen from Haskell / maths) ---\n        /**\n         * For a given predicate, this function finds out if there **exists** a value\n         * inside this `Optional` object that meets the predicate. In practice, this\n         * means that for `Optional`s that do not contain a value it returns false (as\n         * no predicate-meeting value exists).\n         */\n        exists(predicate) {\n            return this.tag && predicate(this.value);\n        }\n        /**\n         * For a given predicate, this function finds out if **all** the values inside\n         * this `Optional` object meet the predicate. In practice, this means that\n         * for `Optional`s that do not contain a value it returns true (as all 0\n         * objects do meet the predicate).\n         */\n        forall(predicate) {\n            return !this.tag || predicate(this.value);\n        }\n        filter(predicate) {\n            if (!this.tag || predicate(this.value)) {\n                return this;\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Getters ---\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.\n         */\n        getOr(replacement) {\n            return this.tag ? this.value : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.  Unlike `getOr`, in this method the `replacement` object is also\n         * `Optional` - meaning that this method will always return an `Optional`.\n         */\n        or(replacement) {\n            return this.tag ? this : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value. Unlike `getOr`, in this method the `replacement` value is\n         * \"thunked\" - that is to say that you don't pass a value to `getOrThunk`, you\n         * pass a function which (if called) will **return** the `value` you want to\n         * use.\n         */\n        getOrThunk(thunk) {\n            return this.tag ? this.value : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided Optional object does not contain a\n         * value.\n         *\n         * Unlike `or`, in this method the `replacement` value is \"thunked\" - that is\n         * to say that you don't pass a value to `orThunk`, you pass a function which\n         * (if called) will **return** the `value` you want to use.\n         *\n         * Unlike `getOrThunk`, in this method the `replacement` value is also\n         * `Optional`, meaning that this method will always return an `Optional`.\n         */\n        orThunk(thunk) {\n            return this.tag ? this : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, throwing an\n         * exception if the provided `Optional` object does not contain a value.\n         *\n         * WARNING:\n         * You should only be using this function if you know that the `Optional`\n         * object **is not** empty (otherwise you're throwing exceptions in production\n         * code, which is bad).\n         *\n         * In tests this is more acceptable.\n         *\n         * Prefer other methods to this, such as `.each`.\n         */\n        getOrDie(message) {\n            if (!this.tag) {\n                throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n            }\n            else {\n                return this.value;\n            }\n        }\n        // --- Interop with null and undefined ---\n        /**\n         * Creates an `Optional` value from a nullable (or undefined-able) input.\n         * Null, or undefined, is converted to `None`, and anything else is converted\n         * to `Some`.\n         */\n        static from(value) {\n            return isNonNullable(value) ? Optional.some(value) : Optional.none();\n        }\n        /**\n         * Converts an `Optional` to a nullable type, by getting the value if it\n         * exists, or returning `null` if it does not.\n         */\n        getOrNull() {\n            return this.tag ? this.value : null;\n        }\n        /**\n         * Converts an `Optional` to an undefined-able type, by getting the value if\n         * it exists, or returning `undefined` if it does not.\n         */\n        getOrUndefined() {\n            return this.value;\n        }\n        // --- Utilities ---\n        /**\n         * If the `Optional` contains a value, perform an action on that value.\n         * Unlike the rest of the methods on this type, `.each` has side-effects. If\n         * you want to transform an `Optional<T>` **into** something, then this is not\n         * the method for you. If you want to use an `Optional<T>` to **do**\n         * something, then this is the method for you - provided you're okay with not\n         * doing anything in the case where the `Optional` doesn't have a value inside\n         * it. If you're not sure whether your use-case fits into transforming\n         * **into** something or **doing** something, check whether it has a return\n         * value. If it does, you should be performing a transform.\n         */\n        each(worker) {\n            if (this.tag) {\n                worker(this.value);\n            }\n        }\n        /**\n         * Turn the `Optional` object into an array that contains all of the values\n         * stored inside the `Optional`. In practice, this means the output will have\n         * either 0 or 1 elements.\n         */\n        toArray() {\n            return this.tag ? [this.value] : [];\n        }\n        /**\n         * Turn the `Optional` object into a string for debugging or printing. Not\n         * recommended for production code, but good for debugging. Also note that\n         * these days an `Optional` object can be logged to the console directly, and\n         * its inner value (if it exists) will be visible.\n         */\n        toString() {\n            return this.tag ? `some(${this.value})` : 'none()';\n        }\n    }\n    // Sneaky optimisation: every instance of Optional.none is identical, so just\n    // reuse the same object\n    Optional.singletonNone = new Optional(false);\n\n    /* eslint-disable @typescript-eslint/unbound-method */\n    const nativeSlice = Array.prototype.slice;\n    const nativePush = Array.prototype.push;\n    // Unwound implementing other functions in terms of each.\n    // The code size is roughly the same, and it should allow for better optimisation.\n    // const each = function<T, U>(xs: T[], f: (x: T, i?: number, xs?: T[]) => void): void {\n    const each$1 = (xs, f) => {\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            f(x, i);\n        }\n    };\n    const flatten = (xs) => {\n        // Note, this is possible because push supports multiple arguments:\n        // http://jsperf.com/concat-push/6\n        // Note that in the past, concat() would silently work (very slowly) for array-like objects.\n        // With this change it will throw an error.\n        const r = [];\n        for (let i = 0, len = xs.length; i < len; ++i) {\n            // Ensure that each value is an array itself\n            if (!isArray(xs[i])) {\n                throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n            }\n            nativePush.apply(r, xs[i]);\n        }\n        return r;\n    };\n    isFunction(Array.from) ? Array.from : (x) => nativeSlice.call(x);\n\n    // There are many variations of Object iteration that are faster than the 'for-in' style:\n    // http://jsperf.com/object-keys-iteration/107\n    //\n    // Use the native keys if it is available (IE9+), otherwise fall back to manually filtering\n    const keys = Object.keys;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n        const props = keys(obj);\n        for (let k = 0, len = props.length; k < len; k++) {\n            const i = props[k];\n            const x = obj[i];\n            f(x, i);\n        }\n    };\n    const get$1 = (obj, key) => {\n        return has(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n\n    const Cell = (initial) => {\n        let value = initial;\n        const get = () => {\n            return value;\n        };\n        const set = (v) => {\n            value = v;\n        };\n        return {\n            get,\n            set\n        };\n    };\n\n    const checkRange = (str, substr, start) => substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    /** Does 'str' start with 'prefix'?\n     *  Note: all strings start with the empty string.\n     *        More formally, for all strings x, startsWith(x, \"\").\n     *        This is so that for all strings x and y, startsWith(y + x, y)\n     */\n    const startsWith = (str, prefix) => {\n        return checkRange(str, prefix, 0);\n    };\n\n    const option = (name) => (editor) => editor.options.get(name);\n    const register$2 = (editor) => {\n        const registerOption = editor.options.register;\n        registerOption('audio_template_callback', {\n            processor: 'function'\n        });\n        registerOption('video_template_callback', {\n            processor: 'function'\n        });\n        registerOption('iframe_template_callback', {\n            processor: 'function'\n        });\n        registerOption('media_live_embeds', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('media_filter_html', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('media_url_resolver', {\n            processor: 'function'\n        });\n        registerOption('media_alt_source', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('media_poster', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('media_dimensions', {\n            processor: 'boolean',\n            default: true\n        });\n    };\n    const getAudioTemplateCallback = option('audio_template_callback');\n    const getVideoTemplateCallback = option('video_template_callback');\n    const getIframeTemplateCallback = option('iframe_template_callback');\n    const hasLiveEmbeds = option('media_live_embeds');\n    const shouldFilterHtml = option('media_filter_html');\n    const getUrlResolver = option('media_url_resolver');\n    const hasAltSource = option('media_alt_source');\n    const hasPoster = option('media_poster');\n    const hasDimensions = option('media_dimensions');\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.html.DomParser');\n\n    const DOM$1 = global$4.DOM;\n    const trimPx = (value) => value.replace(/px$/, '');\n    const getEphoxEmbedData = (node) => {\n        const style = node.attr('style');\n        const styles = style ? DOM$1.parseStyle(style) : {};\n        return {\n            type: 'ephox-embed-iri',\n            source: node.attr('data-ephox-embed-iri'),\n            altsource: '',\n            poster: '',\n            width: get$1(styles, 'max-width').map(trimPx).getOr(''),\n            height: get$1(styles, 'max-height').map(trimPx).getOr('')\n        };\n    };\n    const htmlToData = (html, schema) => {\n        let data = {};\n        const parser = global$3({ validate: false, forced_root_block: false }, schema);\n        const rootNode = parser.parse(html);\n        for (let node = rootNode; node; node = node.walk()) {\n            if (node.type === 1) {\n                const name = node.name;\n                if (node.attr('data-ephox-embed-iri')) {\n                    data = getEphoxEmbedData(node);\n                    // Don't continue to collect if we find an EME embed\n                    break;\n                }\n                else {\n                    if (!data.source && name === 'param') {\n                        data.source = node.attr('movie');\n                    }\n                    if (name === 'iframe' || name === 'object' || name === 'embed' || name === 'video' || name === 'audio') {\n                        if (!data.type) {\n                            data.type = name;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        data = global$5.extend(node.attributes.map, data);\n                    }\n                    if (name === 'source') {\n                        if (!data.source) {\n                            data.source = node.attr('src');\n                        }\n                        else if (!data.altsource) {\n                            data.altsource = node.attr('src');\n                        }\n                    }\n                    if (name === 'img' && !data.poster) {\n                        data.poster = node.attr('src');\n                    }\n                }\n            }\n        }\n        data.source = data.source || data.src || '';\n        data.altsource = data.altsource || '';\n        data.poster = data.poster || '';\n        return data;\n    };\n\n    const guess = (url) => {\n        var _a;\n        const mimes = {\n            mp3: 'audio/mpeg',\n            m4a: 'audio/x-m4a',\n            wav: 'audio/wav',\n            mp4: 'video/mp4',\n            webm: 'video/webm',\n            ogg: 'video/ogg',\n            swf: 'application/x-shockwave-flash'\n        };\n        const fileEnd = (_a = url.toLowerCase().split('.').pop()) !== null && _a !== void 0 ? _a : '';\n        return get$1(mimes, fileEnd).getOr('');\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.html.Node');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.html.Serializer');\n\n    const Parser = (schema, settings = {}) => global$3({\n        forced_root_block: false,\n        validate: false,\n        allow_conditional_comments: true,\n        ...settings\n    }, schema);\n\n    const DOM = global$4.DOM;\n    const addPx = (value) => /^[0-9.]+$/.test(value) ? (value + 'px') : value;\n    const updateEphoxEmbed = (data, node) => {\n        const style = node.attr('style');\n        const styleMap = style ? DOM.parseStyle(style) : {};\n        if (isNonNullable(data.width)) {\n            styleMap['max-width'] = addPx(data.width);\n        }\n        if (isNonNullable(data.height)) {\n            styleMap['max-height'] = addPx(data.height);\n        }\n        node.attr('style', DOM.serializeStyle(styleMap));\n    };\n    const sources = ['source', 'altsource'];\n    const updateHtml = (html, data, updateAll, schema) => {\n        let numSources = 0;\n        let sourceCount = 0;\n        const parser = Parser(schema);\n        parser.addNodeFilter('source', (nodes) => numSources = nodes.length);\n        const rootNode = parser.parse(html);\n        for (let node = rootNode; node; node = node.walk()) {\n            if (node.type === 1) {\n                const name = node.name;\n                if (node.attr('data-ephox-embed-iri')) {\n                    updateEphoxEmbed(data, node);\n                    // Don't continue to update if we find an EME embed\n                    break;\n                }\n                else {\n                    switch (name) {\n                        case 'video':\n                        case 'object':\n                        case 'embed':\n                        case 'img':\n                        case 'iframe':\n                            if (data.height !== undefined && data.width !== undefined) {\n                                node.attr('width', data.width);\n                                node.attr('height', data.height);\n                            }\n                            break;\n                    }\n                    if (updateAll) {\n                        switch (name) {\n                            case 'video':\n                                node.attr('poster', data.poster);\n                                node.attr('src', null);\n                                // Add <source> child elements\n                                for (let index = numSources; index < 2; index++) {\n                                    if (data[sources[index]]) {\n                                        const source = new global$2('source', 1);\n                                        source.attr('src', data[sources[index]]);\n                                        source.attr('type', data[sources[index] + 'mime'] || null);\n                                        node.append(source);\n                                    }\n                                }\n                                break;\n                            case 'iframe':\n                                node.attr('src', data.source);\n                                break;\n                            case 'object':\n                                const hasImage = node.getAll('img').length > 0;\n                                if (data.poster && !hasImage) {\n                                    node.attr('src', data.poster);\n                                    const img = new global$2('img', 1);\n                                    img.attr('src', data.poster);\n                                    img.attr('width', data.width);\n                                    img.attr('height', data.height);\n                                    node.append(img);\n                                }\n                                break;\n                            case 'source':\n                                if (sourceCount < 2) {\n                                    node.attr('src', data[sources[sourceCount]]);\n                                    node.attr('type', data[sources[sourceCount] + 'mime'] || null);\n                                    if (!data[sources[sourceCount]]) {\n                                        node.remove();\n                                        continue;\n                                    }\n                                }\n                                sourceCount++;\n                                break;\n                            case 'img':\n                                if (!data.poster) {\n                                    node.remove();\n                                }\n                                break;\n                        }\n                    }\n                }\n            }\n        }\n        return global$1({}, schema).serialize(rootNode);\n    };\n\n    const urlPatterns = [\n        {\n            regex: /youtu\\.be\\/([\\w\\-_\\?&=.]+)/i,\n            type: 'iframe', w: 560, h: 314,\n            url: 'www.youtube.com/embed/$1',\n            allowFullscreen: true\n        },\n        {\n            regex: /youtube\\.com(.+)v=([^&]+)(&([a-z0-9&=\\-_]+))?/i,\n            type: 'iframe', w: 560, h: 314,\n            url: 'www.youtube.com/embed/$2?$4',\n            allowFullscreen: true\n        },\n        {\n            regex: /youtube.com\\/embed\\/([a-z0-9\\?&=\\-_]+)/i,\n            type: 'iframe', w: 560, h: 314,\n            url: 'www.youtube.com/embed/$1',\n            allowFullscreen: true\n        },\n        {\n            regex: /vimeo\\.com\\/([0-9]+)\\?h=(\\w+)/,\n            type: 'iframe', w: 425, h: 350,\n            url: 'player.vimeo.com/video/$1?h=$2&title=0&byline=0&portrait=0&color=8dc7dc',\n            allowFullscreen: true\n        },\n        {\n            regex: /vimeo\\.com\\/(.*)\\/([0-9]+)\\?h=(\\w+)/,\n            type: 'iframe', w: 425, h: 350,\n            url: 'player.vimeo.com/video/$2?h=$3&title=0&amp;byline=0',\n            allowFullscreen: true\n        },\n        {\n            regex: /vimeo\\.com\\/([0-9]+)/,\n            type: 'iframe', w: 425, h: 350,\n            url: 'player.vimeo.com/video/$1?title=0&byline=0&portrait=0&color=8dc7dc',\n            allowFullscreen: true\n        },\n        {\n            regex: /vimeo\\.com\\/(.*)\\/([0-9]+)/,\n            type: 'iframe', w: 425, h: 350,\n            url: 'player.vimeo.com/video/$2?title=0&amp;byline=0',\n            allowFullscreen: true\n        },\n        {\n            regex: /maps\\.google\\.([a-z]{2,3})\\/maps\\/(.+)msid=(.+)/,\n            type: 'iframe', w: 425, h: 350,\n            url: 'maps.google.com/maps/ms?msid=$2&output=embed\"',\n            allowFullscreen: false\n        },\n        {\n            regex: /dailymotion\\.com\\/video\\/([^_]+)/,\n            type: 'iframe', w: 480, h: 270,\n            url: 'www.dailymotion.com/embed/video/$1',\n            allowFullscreen: true\n        },\n        {\n            regex: /dai\\.ly\\/([^_]+)/,\n            type: 'iframe', w: 480, h: 270,\n            url: 'www.dailymotion.com/embed/video/$1',\n            allowFullscreen: true\n        }\n    ];\n    const getProtocol = (url) => {\n        const protocolMatches = url.match(/^(https?:\\/\\/|www\\.)(.+)$/i);\n        if (protocolMatches && protocolMatches.length > 1) {\n            return protocolMatches[1] === 'www.' ? 'https://' : protocolMatches[1];\n        }\n        else {\n            return 'https://';\n        }\n    };\n    const getUrl = (pattern, url) => {\n        const protocol = getProtocol(url);\n        const match = pattern.regex.exec(url);\n        let newUrl = protocol + pattern.url;\n        if (isNonNullable(match)) {\n            for (let i = 0; i < match.length; i++) {\n                newUrl = newUrl.replace('$' + i, () => match[i] ? match[i] : '');\n            }\n        }\n        return newUrl.replace(/\\?$/, '');\n    };\n    const matchPattern = (url) => {\n        const patterns = urlPatterns.filter((pattern) => pattern.regex.test(url));\n        if (patterns.length > 0) {\n            return global$5.extend({}, patterns[0], { url: getUrl(patterns[0], url) });\n        }\n        else {\n            return null;\n        }\n    };\n\n    const getIframeHtml = (data, iframeTemplateCallback) => {\n        if (iframeTemplateCallback) {\n            return iframeTemplateCallback(data);\n        }\n        else {\n            const allowFullscreen = data.allowfullscreen ? ' allowFullscreen=\"1\"' : '';\n            return '<iframe src=\"' + data.source + '\" width=\"' + data.width + '\" height=\"' + data.height + '\"' + allowFullscreen + '></iframe>';\n        }\n    };\n    const getFlashHtml = (data) => {\n        let html = '<object data=\"' + data.source + '\" width=\"' + data.width + '\" height=\"' + data.height + '\" type=\"application/x-shockwave-flash\">';\n        if (data.poster) {\n            html += '<img src=\"' + data.poster + '\" width=\"' + data.width + '\" height=\"' + data.height + '\" />';\n        }\n        html += '</object>';\n        return html;\n    };\n    const getAudioHtml = (data, audioTemplateCallback) => {\n        if (audioTemplateCallback) {\n            return audioTemplateCallback(data);\n        }\n        else {\n            return ('<audio controls=\"controls\" src=\"' + data.source + '\">' +\n                (data.altsource ?\n                    '\\n<source src=\"' + data.altsource + '\"' +\n                        (data.altsourcemime ? ' type=\"' + data.altsourcemime + '\"' : '') +\n                        ' />\\n' : '') +\n                '</audio>');\n        }\n    };\n    const getVideoHtml = (data, videoTemplateCallback) => {\n        if (videoTemplateCallback) {\n            return videoTemplateCallback(data);\n        }\n        else {\n            return ('<video width=\"' + data.width +\n                '\" height=\"' + data.height + '\"' +\n                (data.poster ? ' poster=\"' + data.poster + '\"' : '') + ' controls=\"controls\">\\n' +\n                '<source src=\"' + data.source + '\"' +\n                (data.sourcemime ? ' type=\"' + data.sourcemime + '\"' : '') + ' />\\n' +\n                (data.altsource ? '<source src=\"' + data.altsource + '\"' +\n                    (data.altsourcemime ? ' type=\"' + data.altsourcemime + '\"' : '') + ' />\\n' : '') +\n                '</video>');\n        }\n    };\n    const dataToHtml = (editor, dataIn) => {\n        var _a;\n        const data = global$5.extend({}, dataIn);\n        if (!data.source) {\n            global$5.extend(data, htmlToData((_a = data.embed) !== null && _a !== void 0 ? _a : '', editor.schema));\n            if (!data.source) {\n                return '';\n            }\n        }\n        if (!data.altsource) {\n            data.altsource = '';\n        }\n        if (!data.poster) {\n            data.poster = '';\n        }\n        data.source = editor.convertURL(data.source, 'source');\n        data.altsource = editor.convertURL(data.altsource, 'source');\n        data.sourcemime = guess(data.source);\n        data.altsourcemime = guess(data.altsource);\n        data.poster = editor.convertURL(data.poster, 'poster');\n        const pattern = matchPattern(data.source);\n        if (pattern) {\n            data.source = pattern.url;\n            data.type = pattern.type;\n            data.allowfullscreen = pattern.allowFullscreen;\n            data.width = data.width || String(pattern.w);\n            data.height = data.height || String(pattern.h);\n        }\n        if (data.embed) {\n            return updateHtml(data.embed, data, true, editor.schema);\n        }\n        else {\n            const audioTemplateCallback = getAudioTemplateCallback(editor);\n            const videoTemplateCallback = getVideoTemplateCallback(editor);\n            const iframeTemplateCallback = getIframeTemplateCallback(editor);\n            data.width = data.width || '300';\n            data.height = data.height || '150';\n            global$5.each(data, (value, key) => {\n                data[key] = editor.dom.encode('' + value);\n            });\n            if (data.type === 'iframe') {\n                return getIframeHtml(data, iframeTemplateCallback);\n            }\n            else if (data.sourcemime === 'application/x-shockwave-flash') {\n                return getFlashHtml(data);\n            }\n            else if (data.sourcemime.indexOf('audio') !== -1) {\n                return getAudioHtml(data, audioTemplateCallback);\n            }\n            else {\n                return getVideoHtml(data, videoTemplateCallback);\n            }\n        }\n    };\n\n    const isMediaElement = (element) => element.hasAttribute('data-mce-object') || element.hasAttribute('data-ephox-embed-iri');\n    const setup$2 = (editor) => {\n        // TINY-10774: On Safari all events bubble out even if you click on the video play button on other browsers the video element doesn't bubble the event\n        editor.on('mousedown', (e) => {\n            const previewObj = editor.dom.getParent(e.target, '.mce-preview-object');\n            if (previewObj && editor.dom.getAttrib(previewObj, 'data-mce-selected') === '2') {\n                e.stopImmediatePropagation();\n            }\n        });\n        editor.on('click keyup touchend', () => {\n            const selectedNode = editor.selection.getNode();\n            if (selectedNode && editor.dom.hasClass(selectedNode, 'mce-preview-object')) {\n                if (editor.dom.getAttrib(selectedNode, 'data-mce-selected')) {\n                    selectedNode.setAttribute('data-mce-selected', '2');\n                }\n            }\n        });\n        editor.on('ObjectResized', (e) => {\n            const target = e.target;\n            if (target.getAttribute('data-mce-object')) {\n                let html = target.getAttribute('data-mce-html');\n                if (html) {\n                    html = unescape(html);\n                    target.setAttribute('data-mce-html', escape(updateHtml(html, {\n                        width: String(e.width),\n                        height: String(e.height)\n                    }, false, editor.schema)));\n                }\n            }\n        });\n    };\n\n    const cache = {};\n    const embedPromise = (data, dataToHtml, handler) => {\n        return new Promise((res, rej) => {\n            const wrappedResolve = (response) => {\n                if (response.html) {\n                    cache[data.source] = response;\n                }\n                return res({\n                    url: data.source,\n                    html: response.html ? response.html : dataToHtml(data)\n                });\n            };\n            if (cache[data.source]) {\n                wrappedResolve(cache[data.source]);\n            }\n            else {\n                handler({ url: data.source }).then(wrappedResolve).catch(rej);\n            }\n        });\n    };\n    const defaultPromise = (data, dataToHtml) => Promise.resolve({ html: dataToHtml(data), url: data.source });\n    const loadedData = (editor) => (data) => dataToHtml(editor, data);\n    const getEmbedHtml = (editor, data) => {\n        const embedHandler = getUrlResolver(editor);\n        return embedHandler ? embedPromise(data, loadedData(editor), embedHandler) : defaultPromise(data, loadedData(editor));\n    };\n    const isCached = (url) => has(cache, url);\n\n    const extractMeta = (sourceInput, data) => get$1(data, sourceInput).bind((mainData) => get$1(mainData, 'meta'));\n    const getValue = (data, metaData, sourceInput) => (prop) => {\n        // Cases:\n        // 1. Get the nested value prop (component is the executed urlinput)\n        // 2. Get from metadata (a urlinput was executed but urlinput != this component)\n        // 3. Not a urlinput so just get string\n        // If prop === sourceInput do 1, 2 then 3, else do 2 then 1 or 3\n        // ASSUMPTION: we only want to get values for props that already exist in data\n        const getFromData = () => get$1(data, prop);\n        const getFromMetaData = () => get$1(metaData, prop);\n        const getNonEmptyValue = (c) => get$1(c, 'value').bind((v) => v.length > 0 ? Optional.some(v) : Optional.none());\n        const getFromValueFirst = () => getFromData().bind((child) => isObject(child)\n            ? getNonEmptyValue(child).orThunk(getFromMetaData)\n            : getFromMetaData().orThunk(() => Optional.from(child)));\n        const getFromMetaFirst = () => getFromMetaData().orThunk(() => getFromData().bind((child) => isObject(child)\n            ? getNonEmptyValue(child)\n            : Optional.from(child)));\n        return { [prop]: (prop === sourceInput ? getFromValueFirst() : getFromMetaFirst()).getOr('') };\n    };\n    const getDimensions = (data, metaData) => {\n        const dimensions = {};\n        get$1(data, 'dimensions').each((dims) => {\n            each$1(['width', 'height'], (prop) => {\n                get$1(metaData, prop).orThunk(() => get$1(dims, prop)).each((value) => dimensions[prop] = value);\n            });\n        });\n        return dimensions;\n    };\n    const unwrap = (data, sourceInput) => {\n        const metaData = sourceInput && sourceInput !== 'dimensions' ? extractMeta(sourceInput, data).getOr({}) : {};\n        const get = getValue(data, metaData, sourceInput);\n        return {\n            ...get('source'),\n            ...get('altsource'),\n            ...get('poster'),\n            ...get('embed'),\n            ...getDimensions(data, metaData)\n        };\n    };\n    const wrap = (data) => {\n        const wrapped = {\n            ...data,\n            source: { value: get$1(data, 'source').getOr('') },\n            altsource: { value: get$1(data, 'altsource').getOr('') },\n            poster: { value: get$1(data, 'poster').getOr('') }\n        };\n        // Add additional size values that may or may not have been in the html\n        each$1(['width', 'height'], (prop) => {\n            get$1(data, prop).each((value) => {\n                const dimensions = wrapped.dimensions || {};\n                dimensions[prop] = value;\n                wrapped.dimensions = dimensions;\n            });\n        });\n        return wrapped;\n    };\n    const handleError = (editor) => (error) => {\n        const errorMessage = error && error.msg ?\n            'Media embed handler error: ' + error.msg :\n            'Media embed handler threw unknown error.';\n        editor.notificationManager.open({ type: 'error', text: errorMessage });\n    };\n    const getEditorData = (editor) => {\n        const element = editor.selection.getNode();\n        const snippet = isMediaElement(element) ? editor.serializer.serialize(element, { selection: true }) : '';\n        const data = htmlToData(snippet, editor.schema);\n        const getDimensionsOfElement = () => {\n            if (isEmbedIframe(data.source, data.type)) {\n                const rect = editor.dom.getRect(element);\n                return {\n                    width: rect.w.toString().replace(/px$/, ''),\n                    height: rect.h.toString().replace(/px$/, ''),\n                };\n            }\n            else {\n                return {};\n            }\n        };\n        const dimensions = getDimensionsOfElement();\n        return {\n            embed: snippet,\n            ...data,\n            ...dimensions\n        };\n    };\n    const addEmbedHtml = (api, editor) => (response) => {\n        // Only set values if a URL has been defined\n        if (isString(response.url) && response.url.trim().length > 0) {\n            const html = response.html;\n            const snippetData = htmlToData(html, editor.schema);\n            const nuData = {\n                ...snippetData,\n                source: response.url,\n                embed: html\n            };\n            api.setData(wrap(nuData));\n        }\n    };\n    const selectPlaceholder = (editor, beforeObjects) => {\n        const afterObjects = editor.dom.select('*[data-mce-object]');\n        // Find new image placeholder so we can select it\n        for (let i = 0; i < beforeObjects.length; i++) {\n            for (let y = afterObjects.length - 1; y >= 0; y--) {\n                if (beforeObjects[i] === afterObjects[y]) {\n                    afterObjects.splice(y, 1);\n                }\n            }\n        }\n        editor.selection.select(afterObjects[0]);\n    };\n    const handleInsert = (editor, html) => {\n        const beforeObjects = editor.dom.select('*[data-mce-object]');\n        editor.insertContent(html);\n        selectPlaceholder(editor, beforeObjects);\n        editor.nodeChanged();\n    };\n    const isEmbedIframe = (url, mediaDataType) => isNonNullable(mediaDataType) && mediaDataType === 'ephox-embed-iri' && isNonNullable(matchPattern(url));\n    const shouldInsertAsNewIframe = (prevData, newData) => {\n        const hasDimensionsChanged = (prevData, newData) => prevData.width !== newData.width || prevData.height !== newData.height;\n        return hasDimensionsChanged(prevData, newData) && isEmbedIframe(newData.source, prevData.type);\n    };\n    const submitForm = (prevData, newData, editor) => {\n        var _a;\n        newData.embed =\n            shouldInsertAsNewIframe(prevData, newData) && hasDimensions(editor)\n                ? dataToHtml(editor, { ...newData, embed: '' })\n                : updateHtml((_a = newData.embed) !== null && _a !== void 0 ? _a : '', newData, false, editor.schema);\n        // Only fetch the embed HTML content if the URL has changed from what it previously was\n        if (newData.embed && (prevData.source === newData.source || isCached(newData.source))) {\n            handleInsert(editor, newData.embed);\n        }\n        else {\n            getEmbedHtml(editor, newData)\n                .then((response) => {\n                handleInsert(editor, response.html);\n            }).catch(handleError(editor));\n        }\n    };\n    const showDialog = (editor) => {\n        const editorData = getEditorData(editor);\n        const currentData = Cell(editorData);\n        const initialData = wrap(editorData);\n        const handleSource = (prevData, api) => {\n            const serviceData = unwrap(api.getData(), 'source');\n            // If a new URL is entered, then clear the embed html and fetch the new data\n            if (prevData.source !== serviceData.source) {\n                addEmbedHtml(win, editor)({ url: serviceData.source, html: '' });\n                getEmbedHtml(editor, serviceData)\n                    .then(addEmbedHtml(win, editor))\n                    .catch(handleError(editor));\n            }\n        };\n        const handleEmbed = (api) => {\n            var _a;\n            const data = unwrap(api.getData());\n            const dataFromEmbed = htmlToData((_a = data.embed) !== null && _a !== void 0 ? _a : '', editor.schema);\n            api.setData(wrap(dataFromEmbed));\n        };\n        const handleUpdate = (api, sourceInput, prevData) => {\n            const dialogData = unwrap(api.getData(), sourceInput);\n            const data = shouldInsertAsNewIframe(prevData, dialogData) && hasDimensions(editor)\n                ? { ...dialogData, embed: '' }\n                : dialogData;\n            const embed = dataToHtml(editor, data);\n            api.setData(wrap({\n                ...data,\n                embed\n            }));\n        };\n        const mediaInput = [{\n                name: 'source',\n                type: 'urlinput',\n                filetype: 'media',\n                label: 'Source',\n                picker_text: 'Browse files'\n            }];\n        const sizeInput = !hasDimensions(editor) ? [] : [{\n                type: 'sizeinput',\n                name: 'dimensions',\n                label: 'Constrain proportions',\n                constrain: true\n            }];\n        const generalTab = {\n            title: 'General',\n            name: 'general',\n            items: flatten([mediaInput, sizeInput])\n        };\n        const embedTextarea = {\n            type: 'textarea',\n            name: 'embed',\n            label: 'Paste your embed code below:'\n        };\n        const embedTab = {\n            title: 'Embed',\n            items: [\n                embedTextarea\n            ]\n        };\n        const advancedFormItems = [];\n        if (hasAltSource(editor)) {\n            advancedFormItems.push({\n                name: 'altsource',\n                type: 'urlinput',\n                filetype: 'media',\n                label: 'Alternative source URL'\n            });\n        }\n        if (hasPoster(editor)) {\n            advancedFormItems.push({\n                name: 'poster',\n                type: 'urlinput',\n                filetype: 'image',\n                label: 'Media poster (Image URL)'\n            });\n        }\n        const advancedTab = {\n            title: 'Advanced',\n            name: 'advanced',\n            items: advancedFormItems\n        };\n        const tabs = [\n            generalTab,\n            embedTab\n        ];\n        if (advancedFormItems.length > 0) {\n            tabs.push(advancedTab);\n        }\n        const body = {\n            type: 'tabpanel',\n            tabs\n        };\n        const win = editor.windowManager.open({\n            title: 'Insert/Edit Media',\n            size: 'normal',\n            body,\n            buttons: [\n                {\n                    type: 'cancel',\n                    name: 'cancel',\n                    text: 'Cancel'\n                },\n                {\n                    type: 'submit',\n                    name: 'save',\n                    text: 'Save',\n                    primary: true\n                }\n            ],\n            onSubmit: (api) => {\n                const serviceData = unwrap(api.getData());\n                submitForm(currentData.get(), serviceData, editor);\n                api.close();\n            },\n            onChange: (api, detail) => {\n                switch (detail.name) {\n                    case 'source':\n                        handleSource(currentData.get(), api);\n                        break;\n                    case 'embed':\n                        handleEmbed(api);\n                        break;\n                    case 'dimensions':\n                    case 'altsource':\n                    case 'poster':\n                        handleUpdate(api, detail.name, currentData.get());\n                        break;\n                }\n                currentData.set(unwrap(api.getData()));\n            },\n            initialData\n        });\n    };\n\n    const get = (editor) => {\n        const showDialog$1 = () => {\n            showDialog(editor);\n        };\n        return {\n            showDialog: showDialog$1\n        };\n    };\n\n    const register$1 = (editor) => {\n        const showDialog$1 = () => {\n            showDialog(editor);\n        };\n        editor.addCommand('mceMedia', showDialog$1);\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const isLiveEmbedNode = (node) => {\n        const name = node.name;\n        return name === 'iframe' || name === 'video' || name === 'audio';\n    };\n    const getDimension = (node, styles, dimension, defaultValue = null) => {\n        const value = node.attr(dimension);\n        if (isNonNullable(value)) {\n            return value;\n        }\n        else if (!has(styles, dimension)) {\n            return defaultValue;\n        }\n        else {\n            return null;\n        }\n    };\n    const setDimensions = (node, previewNode, styles) => {\n        // Apply dimensions for video elements to maintain legacy behaviour\n        const useDefaults = previewNode.name === 'img' || node.name === 'video';\n        // Determine the defaults\n        const defaultWidth = useDefaults ? '300' : null;\n        const fallbackHeight = node.name === 'audio' ? '30' : '150';\n        const defaultHeight = useDefaults ? fallbackHeight : null;\n        previewNode.attr({\n            width: getDimension(node, styles, 'width', defaultWidth),\n            height: getDimension(node, styles, 'height', defaultHeight)\n        });\n    };\n    const appendNodeContent = (editor, nodeName, previewNode, html) => {\n        const newNode = Parser(editor.schema).parse(html, { context: nodeName });\n        while (newNode.firstChild) {\n            previewNode.append(newNode.firstChild);\n        }\n    };\n    const createPlaceholderNode = (editor, node) => {\n        const name = node.name;\n        const placeHolder = new global$2('img', 1);\n        retainAttributesAndInnerHtml(editor, node, placeHolder);\n        setDimensions(node, placeHolder, {});\n        placeHolder.attr({\n            'style': node.attr('style'),\n            'src': global.transparentSrc,\n            'data-mce-object': name,\n            'class': 'mce-object mce-object-' + name\n        });\n        return placeHolder;\n    };\n    const createPreviewNode = (editor, node) => {\n        var _a;\n        const name = node.name;\n        const previewWrapper = new global$2('span', 1);\n        previewWrapper.attr({\n            'contentEditable': 'false',\n            'style': node.attr('style'),\n            'data-mce-object': name,\n            'class': 'mce-preview-object mce-object-' + name\n        });\n        retainAttributesAndInnerHtml(editor, node, previewWrapper);\n        const styles = editor.dom.parseStyle((_a = node.attr('style')) !== null && _a !== void 0 ? _a : '');\n        const previewNode = new global$2(name, 1);\n        setDimensions(node, previewNode, styles);\n        previewNode.attr({\n            src: node.attr('src'),\n            style: node.attr('style'),\n            class: node.attr('class')\n        });\n        if (name === 'iframe') {\n            previewNode.attr({\n                allowfullscreen: node.attr('allowfullscreen'),\n                frameborder: '0',\n                sandbox: node.attr('sandbox'),\n                referrerpolicy: node.attr('referrerpolicy')\n            });\n        }\n        else {\n            // Exclude autoplay as we don't want video/audio to play by default\n            const attrs = ['controls', 'crossorigin', 'currentTime', 'loop', 'muted', 'poster', 'preload'];\n            each$1(attrs, (attrName) => {\n                previewNode.attr(attrName, node.attr(attrName));\n            });\n            // Recreate the child nodes using the sanitized inner HTML\n            const sanitizedHtml = previewWrapper.attr('data-mce-html');\n            if (isNonNullable(sanitizedHtml)) {\n                appendNodeContent(editor, name, previewNode, unescape(sanitizedHtml));\n            }\n        }\n        const shimNode = new global$2('span', 1);\n        shimNode.attr('class', 'mce-shim');\n        previewWrapper.append(previewNode);\n        previewWrapper.append(shimNode);\n        return previewWrapper;\n    };\n    const retainAttributesAndInnerHtml = (editor, sourceNode, targetNode) => {\n        var _a;\n        // Prefix all attributes except internal (data-mce-*), width, height and style since we\n        // will add these to the placeholder\n        const attribs = (_a = sourceNode.attributes) !== null && _a !== void 0 ? _a : [];\n        let ai = attribs.length;\n        while (ai--) {\n            const attrName = attribs[ai].name;\n            let attrValue = attribs[ai].value;\n            if (attrName !== 'width' && attrName !== 'height' && attrName !== 'style' && !startsWith(attrName, 'data-mce-')) {\n                if (attrName === 'data' || attrName === 'src') {\n                    attrValue = editor.convertURL(attrValue, attrName);\n                }\n                targetNode.attr('data-mce-p-' + attrName, attrValue);\n            }\n        }\n        // Place the inner HTML contents inside an escaped attribute\n        // This enables us to copy/paste the fake object\n        const serializer = global$1({ inner: true }, editor.schema);\n        const tempNode = new global$2('div', 1);\n        each$1(sourceNode.children(), (child) => tempNode.append(child));\n        const innerHtml = serializer.serialize(tempNode);\n        if (innerHtml) {\n            targetNode.attr('data-mce-html', escape(innerHtml));\n            targetNode.empty();\n        }\n    };\n    const isPageEmbedWrapper = (node) => {\n        const nodeClass = node.attr('class');\n        return isString(nodeClass) && /\\btiny-pageembed\\b/.test(nodeClass);\n    };\n    const isWithinEmbedWrapper = (node) => {\n        let tempNode = node;\n        while ((tempNode = tempNode.parent)) {\n            if (tempNode.attr('data-ephox-embed-iri') || isPageEmbedWrapper(tempNode)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    const placeHolderConverter = (editor) => (nodes) => {\n        let i = nodes.length;\n        let node;\n        while (i--) {\n            node = nodes[i];\n            if (!node.parent) {\n                continue;\n            }\n            if (node.parent.attr('data-mce-object')) {\n                continue;\n            }\n            if (isLiveEmbedNode(node) && hasLiveEmbeds(editor)) {\n                if (!isWithinEmbedWrapper(node)) {\n                    node.replace(createPreviewNode(editor, node));\n                }\n            }\n            else {\n                if (!isWithinEmbedWrapper(node)) {\n                    node.replace(createPlaceholderNode(editor, node));\n                }\n            }\n        }\n    };\n\n    const parseAndSanitize = (editor, context, html) => {\n        const getEditorOption = editor.options.get;\n        const sanitize = getEditorOption('xss_sanitization');\n        const validate = shouldFilterHtml(editor);\n        return Parser(editor.schema, { sanitize, validate }).parse(html, { context });\n    };\n\n    const setup$1 = (editor) => {\n        editor.on('PreInit', () => {\n            const { schema, serializer, parser } = editor;\n            // Set browser specific allowFullscreen attribs as boolean\n            const boolAttrs = schema.getBoolAttrs();\n            each$1('webkitallowfullscreen mozallowfullscreen'.split(' '), (name) => {\n                boolAttrs[name] = {};\n            });\n            // Add some non-standard attributes to the schema\n            each({\n                embed: ['wmode']\n            }, (attrs, name) => {\n                const rule = schema.getElementRule(name);\n                if (rule) {\n                    each$1(attrs, (attr) => {\n                        rule.attributes[attr] = {};\n                        rule.attributesOrder.push(attr);\n                    });\n                }\n            });\n            // Converts iframe, video etc into placeholder images\n            parser.addNodeFilter('iframe,video,audio,object,embed', placeHolderConverter(editor));\n            // Replaces placeholder images with real elements for video, object, iframe etc\n            serializer.addAttributeFilter('data-mce-object', (nodes, name) => {\n                var _a;\n                let i = nodes.length;\n                while (i--) {\n                    const node = nodes[i];\n                    if (!node.parent) {\n                        continue;\n                    }\n                    const realElmName = node.attr(name);\n                    const realElm = new global$2(realElmName, 1);\n                    // Add width/height to everything but audio\n                    if (realElmName !== 'audio') {\n                        const className = node.attr('class');\n                        if (className && className.indexOf('mce-preview-object') !== -1 && node.firstChild) {\n                            realElm.attr({\n                                width: node.firstChild.attr('width'),\n                                height: node.firstChild.attr('height')\n                            });\n                        }\n                        else {\n                            realElm.attr({\n                                width: node.attr('width'),\n                                height: node.attr('height')\n                            });\n                        }\n                    }\n                    realElm.attr({\n                        style: node.attr('style')\n                    });\n                    // Unprefix all placeholder attributes\n                    const attribs = (_a = node.attributes) !== null && _a !== void 0 ? _a : [];\n                    let ai = attribs.length;\n                    while (ai--) {\n                        const attrName = attribs[ai].name;\n                        if (attrName.indexOf('data-mce-p-') === 0) {\n                            realElm.attr(attrName.substr(11), attribs[ai].value);\n                        }\n                    }\n                    // Inject innerhtml\n                    const innerHtml = node.attr('data-mce-html');\n                    if (innerHtml) {\n                        const fragment = parseAndSanitize(editor, realElmName, unescape(innerHtml));\n                        each$1(fragment.children(), (child) => realElm.append(child));\n                    }\n                    node.replace(realElm);\n                }\n            });\n        });\n        editor.on('SetContent', () => {\n            // TODO: This shouldn't be needed there should be a way to mark bogus\n            // elements so they are never removed except external save\n            const dom = editor.dom;\n            each$1(dom.select('span.mce-preview-object'), (elm) => {\n                if (dom.select('span.mce-shim', elm).length === 0) {\n                    dom.add(elm, 'span', { class: 'mce-shim' });\n                }\n            });\n        });\n    };\n\n    const setup = (editor) => {\n        editor.on('ResolveName', (e) => {\n            let name;\n            if (e.target.nodeType === 1 && (name = e.target.getAttribute('data-mce-object'))) {\n                e.name = name;\n            }\n        });\n    };\n\n    const onSetupEditable = (editor) => (api) => {\n        const nodeChanged = () => {\n            api.setEnabled(editor.selection.isEditable());\n        };\n        editor.on('NodeChange', nodeChanged);\n        nodeChanged();\n        return () => {\n            editor.off('NodeChange', nodeChanged);\n        };\n    };\n    const register = (editor) => {\n        const onAction = () => editor.execCommand('mceMedia');\n        editor.ui.registry.addToggleButton('media', {\n            tooltip: 'Insert/edit media',\n            icon: 'embed',\n            onAction,\n            onSetup: (buttonApi) => {\n                const selection = editor.selection;\n                buttonApi.setActive(isMediaElement(selection.getNode()));\n                const unbindSelectorChanged = selection.selectorChangedWithUnbind('img[data-mce-object],span[data-mce-object],div[data-ephox-embed-iri]', buttonApi.setActive).unbind;\n                const unbindEditable = onSetupEditable(editor)(buttonApi);\n                return () => {\n                    unbindSelectorChanged();\n                    unbindEditable();\n                };\n            }\n        });\n        editor.ui.registry.addMenuItem('media', {\n            icon: 'embed',\n            text: 'Media...',\n            onAction,\n            onSetup: onSetupEditable(editor)\n        });\n    };\n\n    var Plugin = () => {\n        global$6.add('media', (editor) => {\n            register$2(editor);\n            register$1(editor);\n            register(editor);\n            setup(editor);\n            setup$1(editor);\n            setup$2(editor);\n            return get(editor);\n        });\n    };\n\n    Plugin();\n    /** *****\n     * DO NOT EXPORT ANYTHING\n     *\n     * IF YOU DO ROLLUP WILL LEAVE A GLOBAL ON THE PAGE\n     *******/\n\n})();\n", "// Exports the \"media\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/media')\n//   ES2015:\n//     import 'tinymce/plugins/media'\nrequire('./plugin.js');"],
  "mappings": "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",
  "names": ["get", "dataToHtml", "prevData", "newData"]
}
