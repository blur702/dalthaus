{
  "version": 3,
  "sources": ["../../tinymce/plugins/image/plugin.js", "../../tinymce/plugins/image/index.js"],
  "sourcesContent": ["/**\n * TinyMCE version 7.9.1 (2025-05-29)\n */\n\n(function () {\n    'use strict';\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    /* eslint-disable @typescript-eslint/no-wrapper-object-types */\n    const getPrototypeOf = Object.getPrototypeOf;\n    const hasProto = (v, constructor, predicate) => {\n        var _a;\n        if (predicate(v, constructor.prototype)) {\n            return true;\n        }\n        else {\n            // String-based fallback time\n            return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n        }\n    };\n    const typeOf = (x) => {\n        const t = typeof x;\n        if (x === null) {\n            return 'null';\n        }\n        else if (t === 'object' && Array.isArray(x)) {\n            return 'array';\n        }\n        else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n            return 'string';\n        }\n        else {\n            return t;\n        }\n    };\n    const isType = (type) => (value) => typeOf(value) === type;\n    const isSimpleType = (type) => (value) => typeof value === type;\n    const eq = (t) => (a) => t === a;\n    const is = (value, constructor) => isObject(value) && hasProto(value, constructor, (o, proto) => getPrototypeOf(o) === proto);\n    const isString = isType('string');\n    const isObject = isType('object');\n    const isPlainObject = (value) => is(value, Object);\n    const isArray = isType('array');\n    const isNull = eq(null);\n    const isBoolean = isSimpleType('boolean');\n    const isNullable = (a) => a === null || a === undefined;\n    const isNonNullable = (a) => !isNullable(a);\n    const isFunction = isSimpleType('function');\n    const isNumber = isSimpleType('number');\n    const isArrayOf = (value, pred) => {\n        if (isArray(value)) {\n            for (let i = 0, len = value.length; i < len; ++i) {\n                if (!(pred(value[i]))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n\n    const noop = () => { };\n\n    /**\n     * The `Optional` type represents a value (of any type) that potentially does\n     * not exist. Any `Optional<T>` can either be a `Some<T>` (in which case the\n     * value does exist) or a `None` (in which case the value does not exist). This\n     * module defines a whole lot of FP-inspired utility functions for dealing with\n     * `Optional` objects.\n     *\n     * Comparison with null or undefined:\n     * - We don't get fancy null coalescing operators with `Optional`\n     * - We do get fancy helper functions with `Optional`\n     * - `Optional` support nesting, and allow for the type to still be nullable (or\n     * another `Optional`)\n     * - There is no option to turn off strict-optional-checks like there is for\n     * strict-null-checks\n     */\n    class Optional {\n        // The internal representation has a `tag` and a `value`, but both are\n        // private: able to be console.logged, but not able to be accessed by code\n        constructor(tag, value) {\n            this.tag = tag;\n            this.value = value;\n        }\n        // --- Identities ---\n        /**\n         * Creates a new `Optional<T>` that **does** contain a value.\n         */\n        static some(value) {\n            return new Optional(true, value);\n        }\n        /**\n         * Create a new `Optional<T>` that **does not** contain a value. `T` can be\n         * any type because we don't actually have a `T`.\n         */\n        static none() {\n            return Optional.singletonNone;\n        }\n        /**\n         * Perform a transform on an `Optional` type. Regardless of whether this\n         * `Optional` contains a value or not, `fold` will return a value of type `U`.\n         * If this `Optional` does not contain a value, the `U` will be created by\n         * calling `onNone`. If this `Optional` does contain a value, the `U` will be\n         * created by calling `onSome`.\n         *\n         * For the FP enthusiasts in the room, this function:\n         * 1. Could be used to implement all of the functions below\n         * 2. Forms a catamorphism\n         */\n        fold(onNone, onSome) {\n            if (this.tag) {\n                return onSome(this.value);\n            }\n            else {\n                return onNone();\n            }\n        }\n        /**\n         * Determine if this `Optional` object contains a value.\n         */\n        isSome() {\n            return this.tag;\n        }\n        /**\n         * Determine if this `Optional` object **does not** contain a value.\n         */\n        isNone() {\n            return !this.tag;\n        }\n        // --- Functor (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value. If\n         * you provide a function to turn a T into a U, this is the function you use\n         * to turn an `Optional<T>` into an `Optional<U>`. If this **does** contain\n         * a value then the output will also contain a value (that value being the\n         * output of `mapper(this.value)`), and if this **does not** contain a value\n         * then neither will the output.\n         */\n        map(mapper) {\n            if (this.tag) {\n                return Optional.some(mapper(this.value));\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Monad (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value.\n         * Unlike `map`, here the transform itself also returns an `Optional`.\n         */\n        bind(binder) {\n            if (this.tag) {\n                return binder(this.value);\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Traversable (name stolen from Haskell / maths) ---\n        /**\n         * For a given predicate, this function finds out if there **exists** a value\n         * inside this `Optional` object that meets the predicate. In practice, this\n         * means that for `Optional`s that do not contain a value it returns false (as\n         * no predicate-meeting value exists).\n         */\n        exists(predicate) {\n            return this.tag && predicate(this.value);\n        }\n        /**\n         * For a given predicate, this function finds out if **all** the values inside\n         * this `Optional` object meet the predicate. In practice, this means that\n         * for `Optional`s that do not contain a value it returns true (as all 0\n         * objects do meet the predicate).\n         */\n        forall(predicate) {\n            return !this.tag || predicate(this.value);\n        }\n        filter(predicate) {\n            if (!this.tag || predicate(this.value)) {\n                return this;\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Getters ---\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.\n         */\n        getOr(replacement) {\n            return this.tag ? this.value : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.  Unlike `getOr`, in this method the `replacement` object is also\n         * `Optional` - meaning that this method will always return an `Optional`.\n         */\n        or(replacement) {\n            return this.tag ? this : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value. Unlike `getOr`, in this method the `replacement` value is\n         * \"thunked\" - that is to say that you don't pass a value to `getOrThunk`, you\n         * pass a function which (if called) will **return** the `value` you want to\n         * use.\n         */\n        getOrThunk(thunk) {\n            return this.tag ? this.value : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided Optional object does not contain a\n         * value.\n         *\n         * Unlike `or`, in this method the `replacement` value is \"thunked\" - that is\n         * to say that you don't pass a value to `orThunk`, you pass a function which\n         * (if called) will **return** the `value` you want to use.\n         *\n         * Unlike `getOrThunk`, in this method the `replacement` value is also\n         * `Optional`, meaning that this method will always return an `Optional`.\n         */\n        orThunk(thunk) {\n            return this.tag ? this : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, throwing an\n         * exception if the provided `Optional` object does not contain a value.\n         *\n         * WARNING:\n         * You should only be using this function if you know that the `Optional`\n         * object **is not** empty (otherwise you're throwing exceptions in production\n         * code, which is bad).\n         *\n         * In tests this is more acceptable.\n         *\n         * Prefer other methods to this, such as `.each`.\n         */\n        getOrDie(message) {\n            if (!this.tag) {\n                throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n            }\n            else {\n                return this.value;\n            }\n        }\n        // --- Interop with null and undefined ---\n        /**\n         * Creates an `Optional` value from a nullable (or undefined-able) input.\n         * Null, or undefined, is converted to `None`, and anything else is converted\n         * to `Some`.\n         */\n        static from(value) {\n            return isNonNullable(value) ? Optional.some(value) : Optional.none();\n        }\n        /**\n         * Converts an `Optional` to a nullable type, by getting the value if it\n         * exists, or returning `null` if it does not.\n         */\n        getOrNull() {\n            return this.tag ? this.value : null;\n        }\n        /**\n         * Converts an `Optional` to an undefined-able type, by getting the value if\n         * it exists, or returning `undefined` if it does not.\n         */\n        getOrUndefined() {\n            return this.value;\n        }\n        // --- Utilities ---\n        /**\n         * If the `Optional` contains a value, perform an action on that value.\n         * Unlike the rest of the methods on this type, `.each` has side-effects. If\n         * you want to transform an `Optional<T>` **into** something, then this is not\n         * the method for you. If you want to use an `Optional<T>` to **do**\n         * something, then this is the method for you - provided you're okay with not\n         * doing anything in the case where the `Optional` doesn't have a value inside\n         * it. If you're not sure whether your use-case fits into transforming\n         * **into** something or **doing** something, check whether it has a return\n         * value. If it does, you should be performing a transform.\n         */\n        each(worker) {\n            if (this.tag) {\n                worker(this.value);\n            }\n        }\n        /**\n         * Turn the `Optional` object into an array that contains all of the values\n         * stored inside the `Optional`. In practice, this means the output will have\n         * either 0 or 1 elements.\n         */\n        toArray() {\n            return this.tag ? [this.value] : [];\n        }\n        /**\n         * Turn the `Optional` object into a string for debugging or printing. Not\n         * recommended for production code, but good for debugging. Also note that\n         * these days an `Optional` object can be logged to the console directly, and\n         * its inner value (if it exists) will be visible.\n         */\n        toString() {\n            return this.tag ? `some(${this.value})` : 'none()';\n        }\n    }\n    // Sneaky optimisation: every instance of Optional.none is identical, so just\n    // reuse the same object\n    Optional.singletonNone = new Optional(false);\n\n    /* eslint-disable @typescript-eslint/unbound-method */\n    const nativeSlice = Array.prototype.slice;\n    const nativePush = Array.prototype.push;\n    const flatten = (xs) => {\n        // Note, this is possible because push supports multiple arguments:\n        // http://jsperf.com/concat-push/6\n        // Note that in the past, concat() would silently work (very slowly) for array-like objects.\n        // With this change it will throw an error.\n        const r = [];\n        for (let i = 0, len = xs.length; i < len; ++i) {\n            // Ensure that each value is an array itself\n            if (!isArray(xs[i])) {\n                throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n            }\n            nativePush.apply(r, xs[i]);\n        }\n        return r;\n    };\n    const get = (xs, i) => i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    const head = (xs) => get(xs, 0);\n    isFunction(Array.from) ? Array.from : (x) => nativeSlice.call(x);\n    const findMap = (arr, f) => {\n        for (let i = 0; i < arr.length; i++) {\n            const r = f(arr[i], i);\n            if (r.isSome()) {\n                return r;\n            }\n        }\n        return Optional.none();\n    };\n\n    // There are many variations of Object iteration that are faster than the 'for-in' style:\n    // http://jsperf.com/object-keys-iteration/107\n    //\n    // Use the native keys if it is available (IE9+), otherwise fall back to manually filtering\n    const keys = Object.keys;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const hasOwnProperty = Object.hasOwnProperty;\n    const each = (obj, f) => {\n        const props = keys(obj);\n        for (let k = 0, len = props.length; k < len; k++) {\n            const i = props[k];\n            const x = obj[i];\n            f(x, i);\n        }\n    };\n    const objAcc = (r) => (x, i) => {\n        r[i] = x;\n    };\n    const internalFilter = (obj, pred, onTrue, onFalse) => {\n        each(obj, (x, i) => {\n            (pred(x, i) ? onTrue : onFalse)(x, i);\n        });\n    };\n    const filter = (obj, pred) => {\n        const t = {};\n        internalFilter(obj, pred, objAcc(t), noop);\n        return t;\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n    const hasNonNullableKey = (obj, key) => has(obj, key) && obj[key] !== undefined && obj[key] !== null;\n\n    const deep = (old, nu) => {\n        const bothObjects = isPlainObject(old) && isPlainObject(nu);\n        return bothObjects ? deepMerge(old, nu) : nu;\n    };\n    const baseMerge = (merger) => {\n        return (...objects) => {\n            if (objects.length === 0) {\n                throw new Error(`Can't merge zero objects`);\n            }\n            const ret = {};\n            for (let j = 0; j < objects.length; j++) {\n                const curObject = objects[j];\n                for (const key in curObject) {\n                    if (has(curObject, key)) {\n                        ret[key] = merger(ret[key], curObject[key]);\n                    }\n                }\n            }\n            return ret;\n        };\n    };\n    const deepMerge = baseMerge(deep);\n\n    const isNotEmpty = (s) => s.length > 0;\n\n    const fromHtml = (html, scope) => {\n        const doc = scope || document;\n        const div = doc.createElement('div');\n        div.innerHTML = html;\n        if (!div.hasChildNodes() || div.childNodes.length > 1) {\n            const message = 'HTML does not have a single root node';\n            // eslint-disable-next-line no-console\n            console.error(message, html);\n            throw new Error(message);\n        }\n        return fromDom(div.childNodes[0]);\n    };\n    const fromTag = (tag, scope) => {\n        const doc = scope || document;\n        const node = doc.createElement(tag);\n        return fromDom(node);\n    };\n    const fromText = (text, scope) => {\n        const doc = scope || document;\n        const node = doc.createTextNode(text);\n        return fromDom(node);\n    };\n    const fromDom = (node) => {\n        // TODO: Consider removing this check, but left atm for safety\n        if (node === null || node === undefined) {\n            throw new Error('Node cannot be null or undefined');\n        }\n        return {\n            dom: node\n        };\n    };\n    const fromPoint = (docElm, x, y) => Optional.from(docElm.dom.elementFromPoint(x, y)).map(fromDom);\n    // tslint:disable-next-line:variable-name\n    const SugarElement = {\n        fromHtml,\n        fromTag,\n        fromText,\n        fromDom,\n        fromPoint\n    };\n\n    const rawSet = (dom, key, value) => {\n        /*\n         * JQuery coerced everything to a string, and silently did nothing on text node/null/undefined.\n         *\n         * We fail on those invalid cases, only allowing numbers and booleans.\n         */\n        if (isString(value) || isBoolean(value) || isNumber(value)) {\n            dom.setAttribute(key, value + '');\n        }\n        else {\n            // eslint-disable-next-line no-console\n            console.error('Invalid call to Attribute.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n            throw new Error('Attribute value was not simple');\n        }\n    };\n    const set = (element, key, value) => {\n        rawSet(element.dom, key, value);\n    };\n    const remove = (element, key) => {\n        element.dom.removeAttribute(key);\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    const option = (name) => (editor) => editor.options.get(name);\n    const register$2 = (editor) => {\n        const registerOption = editor.options.register;\n        registerOption('image_dimensions', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('image_advtab', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('image_uploadtab', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('image_prepend_url', {\n            processor: 'string',\n            default: ''\n        });\n        registerOption('image_class_list', {\n            processor: 'object[]'\n        });\n        registerOption('image_description', {\n            processor: 'boolean',\n            default: true\n        });\n        registerOption('image_title', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('image_caption', {\n            processor: 'boolean',\n            default: false\n        });\n        registerOption('image_list', {\n            processor: (value) => {\n                const valid = value === false || isString(value) || isArrayOf(value, isObject) || isFunction(value);\n                return valid ? { value, valid } : { valid: false, message: 'Must be false, a string, an array or a function.' };\n            },\n            default: false\n        });\n    };\n    const hasDimensions = option('image_dimensions');\n    const hasAdvTab = option('image_advtab');\n    const hasUploadTab = option('image_uploadtab');\n    const getPrependUrl = option('image_prepend_url');\n    const getClassList = option('image_class_list');\n    const hasDescription = option('image_description');\n    const hasImageTitle = option('image_title');\n    const hasImageCaption = option('image_caption');\n    const getImageList = option('image_list');\n    const showAccessibilityOptions = option('a11y_advanced_options');\n    const isAutomaticUploadsEnabled = option('automatic_uploads');\n    const hasUploadUrl = (editor) => isNotEmpty(editor.options.get('images_upload_url'));\n    const hasUploadHandler = (editor) => isNonNullable(editor.options.get('images_upload_handler'));\n\n    // TODO: Figure out if these would ever be something other than numbers. This was added in: #TINY-1350\n    const parseIntAndGetMax = (val1, val2) => Math.max(parseInt(val1, 10), parseInt(val2, 10));\n    const getImageSize = (url) => new Promise((callback) => {\n        const img = document.createElement('img');\n        const done = (dimensions) => {\n            if (img.parentNode) {\n                img.parentNode.removeChild(img);\n            }\n            callback(dimensions);\n        };\n        img.addEventListener('load', () => {\n            const width = parseIntAndGetMax(img.width, img.clientWidth);\n            const height = parseIntAndGetMax(img.height, img.clientHeight);\n            const dimensions = { width, height };\n            done(Promise.resolve(dimensions));\n        });\n        img.addEventListener('error', () => {\n            done(Promise.reject(`Failed to get image dimensions for: ${url}`));\n        });\n        const style = img.style;\n        style.visibility = 'hidden';\n        style.position = 'fixed';\n        style.bottom = style.left = '0px';\n        style.width = style.height = 'auto';\n        document.body.appendChild(img);\n        img.src = url;\n    });\n    const removePixelSuffix = (value) => {\n        if (value) {\n            value = value.replace(/px$/, '');\n        }\n        return value;\n    };\n    const addPixelSuffix = (value) => {\n        if (value.length > 0 && /^[0-9]+$/.test(value)) {\n            value += 'px';\n        }\n        return value;\n    };\n    const mergeMargins = (css) => {\n        if (css.margin) {\n            const splitMargin = String(css.margin).split(' ');\n            switch (splitMargin.length) {\n                case 1: // margin: toprightbottomleft;\n                    css['margin-top'] = css['margin-top'] || splitMargin[0];\n                    css['margin-right'] = css['margin-right'] || splitMargin[0];\n                    css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n                    css['margin-left'] = css['margin-left'] || splitMargin[0];\n                    break;\n                case 2: // margin: topbottom rightleft;\n                    css['margin-top'] = css['margin-top'] || splitMargin[0];\n                    css['margin-right'] = css['margin-right'] || splitMargin[1];\n                    css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n                    css['margin-left'] = css['margin-left'] || splitMargin[1];\n                    break;\n                case 3: // margin: top rightleft bottom;\n                    css['margin-top'] = css['margin-top'] || splitMargin[0];\n                    css['margin-right'] = css['margin-right'] || splitMargin[1];\n                    css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n                    css['margin-left'] = css['margin-left'] || splitMargin[1];\n                    break;\n                case 4: // margin: top right bottom left;\n                    css['margin-top'] = css['margin-top'] || splitMargin[0];\n                    css['margin-right'] = css['margin-right'] || splitMargin[1];\n                    css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n                    css['margin-left'] = css['margin-left'] || splitMargin[3];\n            }\n            delete css.margin;\n        }\n        return css;\n    };\n    // TODO: Input on this callback should really be validated\n    const createImageList = (editor, callback) => {\n        const imageList = getImageList(editor);\n        if (isString(imageList)) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            fetch(imageList)\n                .then((res) => {\n                if (res.ok) {\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    res.json().then(callback);\n                }\n            });\n        }\n        else if (isFunction(imageList)) {\n            imageList(callback);\n        }\n        else {\n            callback(imageList);\n        }\n    };\n    const waitLoadImage = (editor, data, imgElm) => {\n        const selectImage = () => {\n            imgElm.onload = imgElm.onerror = null;\n            if (editor.selection) {\n                editor.selection.select(imgElm);\n                editor.nodeChanged();\n            }\n        };\n        imgElm.onload = () => {\n            if (!data.width && !data.height && hasDimensions(editor)) {\n                editor.dom.setAttribs(imgElm, {\n                    width: String(imgElm.clientWidth),\n                    height: String(imgElm.clientHeight)\n                });\n            }\n            selectImage();\n        };\n        imgElm.onerror = selectImage;\n    };\n    const blobToDataUri = (blob) => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n        reader.onerror = () => {\n            var _a;\n            reject((_a = reader.error) === null || _a === void 0 ? void 0 : _a.message);\n        };\n        reader.readAsDataURL(blob);\n    });\n    const isPlaceholderImage = (imgElm) => imgElm.nodeName === 'IMG' && (imgElm.hasAttribute('data-mce-object') || imgElm.hasAttribute('data-mce-placeholder'));\n    const isSafeImageUrl = (editor, src) => {\n        const getOption = editor.options.get;\n        return global$2.isDomSafe(src, 'img', {\n            allow_html_data_urls: getOption('allow_html_data_urls'),\n            allow_script_urls: getOption('allow_script_urls'),\n            allow_svg_data_urls: getOption('allow_svg_data_urls')\n        });\n    };\n\n    const DOM = global$3.DOM;\n    const getHspace = (image) => {\n        if (image.style.marginLeft && image.style.marginRight && image.style.marginLeft === image.style.marginRight) {\n            return removePixelSuffix(image.style.marginLeft);\n        }\n        else {\n            return '';\n        }\n    };\n    const getVspace = (image) => {\n        if (image.style.marginTop && image.style.marginBottom && image.style.marginTop === image.style.marginBottom) {\n            return removePixelSuffix(image.style.marginTop);\n        }\n        else {\n            return '';\n        }\n    };\n    const getBorder = (image) => {\n        if (image.style.borderWidth) {\n            return removePixelSuffix(image.style.borderWidth);\n        }\n        else {\n            return '';\n        }\n    };\n    const getAttrib = (image, name) => {\n        var _a;\n        if (image.hasAttribute(name)) {\n            return (_a = image.getAttribute(name)) !== null && _a !== void 0 ? _a : '';\n        }\n        else {\n            return '';\n        }\n    };\n    const hasCaption = (image) => image.parentNode !== null && image.parentNode.nodeName === 'FIGURE';\n    const updateAttrib = (image, name, value) => {\n        if (value === '' || value === null) {\n            image.removeAttribute(name);\n        }\n        else {\n            image.setAttribute(name, value);\n        }\n    };\n    const wrapInFigure = (image) => {\n        const figureElm = DOM.create('figure', { class: 'image' });\n        DOM.insertAfter(figureElm, image);\n        figureElm.appendChild(image);\n        figureElm.appendChild(DOM.create('figcaption', { contentEditable: 'true' }, 'Caption'));\n        figureElm.contentEditable = 'false';\n    };\n    const removeFigure = (image) => {\n        const figureElm = image.parentNode;\n        if (isNonNullable(figureElm)) {\n            DOM.insertAfter(image, figureElm);\n            DOM.remove(figureElm);\n        }\n    };\n    const toggleCaption = (image) => {\n        if (hasCaption(image)) {\n            removeFigure(image);\n        }\n        else {\n            wrapInFigure(image);\n        }\n    };\n    const normalizeStyle = (image, normalizeCss) => {\n        const attrValue = image.getAttribute('style');\n        const value = normalizeCss(attrValue !== null ? attrValue : '');\n        if (value.length > 0) {\n            image.setAttribute('style', value);\n            image.setAttribute('data-mce-style', value);\n        }\n        else {\n            image.removeAttribute('style');\n        }\n    };\n    const setSize = (name, normalizeCss) => (image, name, value) => {\n        const styles = image.style;\n        if (styles[name]) {\n            styles[name] = addPixelSuffix(value);\n            normalizeStyle(image, normalizeCss);\n        }\n        else {\n            updateAttrib(image, name, value);\n        }\n    };\n    const getSize = (image, name) => {\n        if (image.style[name]) {\n            return removePixelSuffix(image.style[name]);\n        }\n        else {\n            return getAttrib(image, name);\n        }\n    };\n    const setHspace = (image, value) => {\n        const pxValue = addPixelSuffix(value);\n        image.style.marginLeft = pxValue;\n        image.style.marginRight = pxValue;\n    };\n    const setVspace = (image, value) => {\n        const pxValue = addPixelSuffix(value);\n        image.style.marginTop = pxValue;\n        image.style.marginBottom = pxValue;\n    };\n    const setBorder = (image, value) => {\n        const pxValue = addPixelSuffix(value);\n        image.style.borderWidth = pxValue;\n    };\n    const setBorderStyle = (image, value) => {\n        image.style.borderStyle = value;\n    };\n    const getBorderStyle = (image) => { var _a; return (_a = image.style.borderStyle) !== null && _a !== void 0 ? _a : ''; };\n    const isFigure = (elm) => isNonNullable(elm) && elm.nodeName === 'FIGURE';\n    const isImage = (elm) => elm.nodeName === 'IMG';\n    const getIsDecorative = (image) => DOM.getAttrib(image, 'alt').length === 0 && DOM.getAttrib(image, 'role') === 'presentation';\n    const getAlt = (image) => {\n        if (getIsDecorative(image)) {\n            return '';\n        }\n        else {\n            return getAttrib(image, 'alt');\n        }\n    };\n    const defaultData = () => ({\n        src: '',\n        alt: '',\n        title: '',\n        width: '',\n        height: '',\n        class: '',\n        style: '',\n        caption: false,\n        hspace: '',\n        vspace: '',\n        border: '',\n        borderStyle: '',\n        isDecorative: false\n    });\n    const getStyleValue = (normalizeCss, data) => {\n        var _a;\n        const image = document.createElement('img');\n        updateAttrib(image, 'style', data.style);\n        if (getHspace(image) || data.hspace !== '') {\n            setHspace(image, data.hspace);\n        }\n        if (getVspace(image) || data.vspace !== '') {\n            setVspace(image, data.vspace);\n        }\n        if (getBorder(image) || data.border !== '') {\n            setBorder(image, data.border);\n        }\n        if (getBorderStyle(image) || data.borderStyle !== '') {\n            setBorderStyle(image, data.borderStyle);\n        }\n        return normalizeCss((_a = image.getAttribute('style')) !== null && _a !== void 0 ? _a : '');\n    };\n    const create = (normalizeCss, data) => {\n        const image = document.createElement('img');\n        write(normalizeCss, { ...data, caption: false }, image);\n        // Always set alt even if data.alt is an empty string\n        setAlt(image, data.alt, data.isDecorative);\n        if (data.caption) {\n            const figure = DOM.create('figure', { class: 'image' });\n            figure.appendChild(image);\n            figure.appendChild(DOM.create('figcaption', { contentEditable: 'true' }, 'Caption'));\n            figure.contentEditable = 'false';\n            return figure;\n        }\n        else {\n            return image;\n        }\n    };\n    const read = (normalizeCss, image) => ({\n        src: getAttrib(image, 'src'),\n        alt: getAlt(image),\n        title: getAttrib(image, 'title'),\n        width: getSize(image, 'width'),\n        height: getSize(image, 'height'),\n        class: getAttrib(image, 'class'),\n        style: normalizeCss(getAttrib(image, 'style')),\n        caption: hasCaption(image),\n        hspace: getHspace(image),\n        vspace: getVspace(image),\n        border: getBorder(image),\n        borderStyle: getBorderStyle(image),\n        isDecorative: getIsDecorative(image)\n    });\n    const updateProp = (image, oldData, newData, name, set) => {\n        if (newData[name] !== oldData[name]) {\n            set(image, name, String(newData[name]));\n        }\n    };\n    const setAlt = (image, alt, isDecorative) => {\n        if (isDecorative) {\n            DOM.setAttrib(image, 'role', 'presentation');\n            // unfortunately can't set \"\" attr value with domutils\n            const sugarImage = SugarElement.fromDom(image);\n            set(sugarImage, 'alt', '');\n        }\n        else {\n            if (isNull(alt)) {\n                const sugarImage = SugarElement.fromDom(image);\n                remove(sugarImage, 'alt');\n            }\n            else {\n                // unfortunately can't set \"\" attr value with domutils\n                const sugarImage = SugarElement.fromDom(image);\n                set(sugarImage, 'alt', alt);\n            }\n            if (DOM.getAttrib(image, 'role') === 'presentation') {\n                DOM.setAttrib(image, 'role', '');\n            }\n        }\n    };\n    const updateAlt = (image, oldData, newData) => {\n        if (newData.alt !== oldData.alt || newData.isDecorative !== oldData.isDecorative) {\n            setAlt(image, newData.alt, newData.isDecorative);\n        }\n    };\n    const normalized = (set, normalizeCss) => (image, name, value) => {\n        set(image, value);\n        normalizeStyle(image, normalizeCss);\n    };\n    const write = (normalizeCss, newData, image) => {\n        const oldData = read(normalizeCss, image);\n        updateProp(image, oldData, newData, 'caption', (image, _name, _value) => toggleCaption(image));\n        updateProp(image, oldData, newData, 'src', updateAttrib);\n        updateProp(image, oldData, newData, 'title', updateAttrib);\n        updateProp(image, oldData, newData, 'width', setSize('width', normalizeCss));\n        updateProp(image, oldData, newData, 'height', setSize('height', normalizeCss));\n        updateProp(image, oldData, newData, 'class', updateAttrib);\n        updateProp(image, oldData, newData, 'style', normalized((image, value) => updateAttrib(image, 'style', value), normalizeCss));\n        updateProp(image, oldData, newData, 'hspace', normalized(setHspace, normalizeCss));\n        updateProp(image, oldData, newData, 'vspace', normalized(setVspace, normalizeCss));\n        updateProp(image, oldData, newData, 'border', normalized(setBorder, normalizeCss));\n        updateProp(image, oldData, newData, 'borderStyle', normalized(setBorderStyle, normalizeCss));\n        updateAlt(image, oldData, newData);\n    };\n\n    const normalizeCss$1 = (editor, cssText) => {\n        const css = editor.dom.styles.parse(cssText);\n        const mergedCss = mergeMargins(css);\n        const compressed = editor.dom.styles.parse(editor.dom.styles.serialize(mergedCss));\n        return editor.dom.styles.serialize(compressed);\n    };\n    const getSelectedImage = (editor) => {\n        const imgElm = editor.selection.getNode();\n        const figureElm = editor.dom.getParent(imgElm, 'figure.image');\n        if (figureElm) {\n            return editor.dom.select('img', figureElm)[0];\n        }\n        if (imgElm && (imgElm.nodeName !== 'IMG' || isPlaceholderImage(imgElm))) {\n            return null;\n        }\n        return imgElm;\n    };\n    const splitTextBlock = (editor, figure) => {\n        var _a;\n        const dom = editor.dom;\n        const textBlockElements = filter(editor.schema.getTextBlockElements(), (_, parentElm) => !editor.schema.isValidChild(parentElm, 'figure'));\n        const textBlock = dom.getParent(figure.parentNode, (node) => hasNonNullableKey(textBlockElements, node.nodeName), editor.getBody());\n        if (textBlock) {\n            return (_a = dom.split(textBlock, figure)) !== null && _a !== void 0 ? _a : figure;\n        }\n        else {\n            return figure;\n        }\n    };\n    const readImageDataFromSelection = (editor) => {\n        const image = getSelectedImage(editor);\n        return image ? read((css) => normalizeCss$1(editor, css), image) : defaultData();\n    };\n    const insertImageAtCaret = (editor, data) => {\n        const elm = create((css) => normalizeCss$1(editor, css), data);\n        editor.dom.setAttrib(elm, 'data-mce-id', '__mcenew');\n        editor.focus();\n        editor.selection.setContent(elm.outerHTML);\n        const insertedElm = editor.dom.select('*[data-mce-id=\"__mcenew\"]')[0];\n        editor.dom.setAttrib(insertedElm, 'data-mce-id', null);\n        if (isFigure(insertedElm)) {\n            const figure = splitTextBlock(editor, insertedElm);\n            editor.selection.select(figure);\n        }\n        else {\n            editor.selection.select(insertedElm);\n        }\n    };\n    const syncSrcAttr = (editor, image) => {\n        editor.dom.setAttrib(image, 'src', image.getAttribute('src'));\n    };\n    const deleteImage = (editor, image) => {\n        if (image) {\n            const elm = editor.dom.is(image.parentNode, 'figure.image') ? image.parentNode : image;\n            editor.dom.remove(elm);\n            editor.focus();\n            editor.nodeChanged();\n            if (editor.dom.isEmpty(editor.getBody())) {\n                editor.setContent('');\n                editor.selection.setCursorLocation();\n            }\n        }\n    };\n    const writeImageDataToSelection = (editor, data) => {\n        const image = getSelectedImage(editor);\n        if (image) {\n            write((css) => normalizeCss$1(editor, css), data, image);\n            syncSrcAttr(editor, image);\n            if (isFigure(image.parentNode)) {\n                editor.dom.setStyle(image, 'float', '');\n                const figure = image.parentNode;\n                splitTextBlock(editor, figure);\n                editor.selection.select(image.parentNode);\n            }\n            else {\n                editor.selection.select(image);\n                waitLoadImage(editor, data, image);\n            }\n        }\n    };\n    const sanitizeImageData = (editor, data) => {\n        // Sanitize the URL\n        const src = data.src;\n        return {\n            ...data,\n            src: isSafeImageUrl(editor, src) ? src : ''\n        };\n    };\n    const insertOrUpdateImage = (editor, partialData) => {\n        const image = getSelectedImage(editor);\n        if (image) {\n            const selectedImageData = read((css) => normalizeCss$1(editor, css), image);\n            const data = { ...selectedImageData, ...partialData };\n            const sanitizedData = sanitizeImageData(editor, data);\n            if (data.src) {\n                writeImageDataToSelection(editor, sanitizedData);\n            }\n            else {\n                deleteImage(editor, image);\n            }\n        }\n        else if (partialData.src) {\n            insertImageAtCaret(editor, { ...defaultData(), ...partialData });\n        }\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.ImageUploader');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    const getValue = (item) => isString(item.value) ? item.value : '';\n    const getText = (item) => {\n        if (isString(item.text)) {\n            return item.text;\n        }\n        else if (isString(item.title)) {\n            return item.title;\n        }\n        else {\n            return '';\n        }\n    };\n    const sanitizeList = (list, extractValue) => {\n        const out = [];\n        global.each(list, (item) => {\n            const text = getText(item);\n            if (item.menu !== undefined) {\n                const items = sanitizeList(item.menu, extractValue);\n                out.push({ text, items }); // list group\n            }\n            else {\n                const value = extractValue(item);\n                out.push({ text, value }); // list value\n            }\n        });\n        return out;\n    };\n    const sanitizer = (extractor = getValue) => (list) => {\n        if (list) {\n            return Optional.from(list).map((list) => sanitizeList(list, extractor));\n        }\n        else {\n            return Optional.none();\n        }\n    };\n    const sanitize = (list) => sanitizer(getValue)(list);\n    const isGroup = (item) => has(item, 'items');\n    const findEntryDelegate = (list, value) => findMap(list, (item) => {\n        if (isGroup(item)) {\n            return findEntryDelegate(item.items, value);\n        }\n        else if (item.value === value) {\n            return Optional.some(item);\n        }\n        else {\n            return Optional.none();\n        }\n    });\n    const findEntry = (optList, value) => optList.bind((list) => findEntryDelegate(list, value));\n    const ListUtils = {\n        sanitizer,\n        sanitize,\n        findEntry\n    };\n\n    const makeTab$2 = (_info) => ({\n        title: 'Advanced',\n        name: 'advanced',\n        items: [\n            {\n                type: 'grid',\n                columns: 2,\n                items: [\n                    {\n                        type: 'input',\n                        label: 'Vertical space',\n                        name: 'vspace',\n                        inputMode: 'numeric'\n                    },\n                    {\n                        type: 'input',\n                        label: 'Horizontal space',\n                        name: 'hspace',\n                        inputMode: 'numeric'\n                    },\n                    {\n                        type: 'input',\n                        label: 'Border width',\n                        name: 'border',\n                        inputMode: 'numeric'\n                    },\n                    {\n                        type: 'listbox',\n                        name: 'borderstyle',\n                        label: 'Border style',\n                        items: [\n                            { text: 'Select...', value: '' },\n                            { text: 'Solid', value: 'solid' },\n                            { text: 'Dotted', value: 'dotted' },\n                            { text: 'Dashed', value: 'dashed' },\n                            { text: 'Double', value: 'double' },\n                            { text: 'Groove', value: 'groove' },\n                            { text: 'Ridge', value: 'ridge' },\n                            { text: 'Inset', value: 'inset' },\n                            { text: 'Outset', value: 'outset' },\n                            { text: 'None', value: 'none' },\n                            { text: 'Hidden', value: 'hidden' }\n                        ]\n                    }\n                ]\n            }\n        ]\n    });\n    const AdvTab = {\n        makeTab: makeTab$2\n    };\n\n    const collect = (editor) => {\n        const urlListSanitizer = ListUtils.sanitizer((item) => editor.convertURL(item.value || item.url || '', 'src'));\n        const futureImageList = new Promise((completer) => {\n            createImageList(editor, (imageList) => {\n                completer(urlListSanitizer(imageList).map((items) => flatten([\n                    [{ text: 'None', value: '' }],\n                    items\n                ])));\n            });\n        });\n        const classList = ListUtils.sanitize(getClassList(editor));\n        const hasAdvTab$1 = hasAdvTab(editor);\n        const hasUploadTab$1 = hasUploadTab(editor);\n        const hasUploadUrl$1 = hasUploadUrl(editor);\n        const hasUploadHandler$1 = hasUploadHandler(editor);\n        const image = readImageDataFromSelection(editor);\n        const hasDescription$1 = hasDescription(editor);\n        const hasImageTitle$1 = hasImageTitle(editor);\n        const hasDimensions$1 = hasDimensions(editor);\n        const hasImageCaption$1 = hasImageCaption(editor);\n        const hasAccessibilityOptions = showAccessibilityOptions(editor);\n        const automaticUploads = isAutomaticUploadsEnabled(editor);\n        const prependURL = Optional.some(getPrependUrl(editor)).filter((preUrl) => isString(preUrl) && preUrl.length > 0);\n        return futureImageList.then((imageList) => ({\n            image,\n            imageList,\n            classList,\n            hasAdvTab: hasAdvTab$1,\n            hasUploadTab: hasUploadTab$1,\n            hasUploadUrl: hasUploadUrl$1,\n            hasUploadHandler: hasUploadHandler$1,\n            hasDescription: hasDescription$1,\n            hasImageTitle: hasImageTitle$1,\n            hasDimensions: hasDimensions$1,\n            hasImageCaption: hasImageCaption$1,\n            prependURL,\n            hasAccessibilityOptions,\n            automaticUploads\n        }));\n    };\n\n    const makeItems = (info) => {\n        const imageUrl = {\n            name: 'src',\n            type: 'urlinput',\n            filetype: 'image',\n            label: 'Source',\n            picker_text: 'Browse files'\n        };\n        const imageList = info.imageList.map((items) => ({\n            name: 'images',\n            type: 'listbox',\n            label: 'Image list',\n            items\n        }));\n        const imageDescription = {\n            name: 'alt',\n            type: 'input',\n            label: 'Alternative description',\n            enabled: !(info.hasAccessibilityOptions && info.image.isDecorative)\n        };\n        const imageTitle = {\n            name: 'title',\n            type: 'input',\n            label: 'Image title'\n        };\n        const imageDimensions = {\n            name: 'dimensions',\n            type: 'sizeinput'\n        };\n        const isDecorative = {\n            type: 'label',\n            label: 'Accessibility',\n            items: [{\n                    name: 'isDecorative',\n                    type: 'checkbox',\n                    label: 'Image is decorative'\n                }]\n        };\n        // TODO: the original listbox supported styled items but bridge does not seem to support this\n        const classList = info.classList.map((items) => ({\n            name: 'classes',\n            type: 'listbox',\n            label: 'Class',\n            items\n        }));\n        const caption = {\n            type: 'label',\n            label: 'Caption',\n            items: [\n                {\n                    type: 'checkbox',\n                    name: 'caption',\n                    label: 'Show caption'\n                }\n            ]\n        };\n        const getDialogContainerType = (useColumns) => useColumns ? { type: 'grid', columns: 2 } : { type: 'panel' };\n        return flatten([\n            [imageUrl],\n            imageList.toArray(),\n            info.hasAccessibilityOptions && info.hasDescription ? [isDecorative] : [],\n            info.hasDescription ? [imageDescription] : [],\n            info.hasImageTitle ? [imageTitle] : [],\n            info.hasDimensions ? [imageDimensions] : [],\n            [{\n                    ...getDialogContainerType(info.classList.isSome() && info.hasImageCaption),\n                    items: flatten([\n                        classList.toArray(),\n                        info.hasImageCaption ? [caption] : []\n                    ])\n                }]\n        ]);\n    };\n    const makeTab$1 = (info) => ({\n        title: 'General',\n        name: 'general',\n        items: makeItems(info)\n    });\n    const MainTab = {\n        makeTab: makeTab$1,\n        makeItems\n    };\n\n    const makeTab = (_info) => {\n        const items = [\n            {\n                type: 'dropzone',\n                name: 'fileinput'\n            }\n        ];\n        return {\n            title: 'Upload',\n            name: 'upload',\n            items\n        };\n    };\n    const UploadTab = {\n        makeTab\n    };\n\n    const createState = (info) => ({\n        prevImage: ListUtils.findEntry(info.imageList, info.image.src),\n        prevAlt: info.image.alt,\n        open: true\n    });\n    const fromImageData = (image) => ({\n        src: {\n            value: image.src,\n            meta: {}\n        },\n        images: image.src,\n        alt: image.alt,\n        title: image.title,\n        dimensions: {\n            width: image.width,\n            height: image.height\n        },\n        classes: image.class,\n        caption: image.caption,\n        style: image.style,\n        vspace: image.vspace,\n        border: image.border,\n        hspace: image.hspace,\n        borderstyle: image.borderStyle,\n        fileinput: [],\n        isDecorative: image.isDecorative\n    });\n    const toImageData = (data, removeEmptyAlt) => ({\n        src: data.src.value,\n        alt: (data.alt === null || data.alt.length === 0) && removeEmptyAlt ? null : data.alt,\n        title: data.title,\n        width: data.dimensions.width,\n        height: data.dimensions.height,\n        class: data.classes,\n        style: data.style,\n        caption: data.caption,\n        hspace: data.hspace,\n        vspace: data.vspace,\n        border: data.border,\n        borderStyle: data.borderstyle,\n        isDecorative: data.isDecorative\n    });\n    const addPrependUrl2 = (info, srcURL) => {\n        // Add the prependURL\n        if (!/^(?:[a-zA-Z]+:)?\\/\\//.test(srcURL)) {\n            return info.prependURL.bind((prependUrl) => {\n                if (srcURL.substring(0, prependUrl.length) !== prependUrl) {\n                    return Optional.some(prependUrl + srcURL);\n                }\n                return Optional.none();\n            });\n        }\n        return Optional.none();\n    };\n    const addPrependUrl = (info, api) => {\n        const data = api.getData();\n        addPrependUrl2(info, data.src.value).each((srcURL) => {\n            api.setData({ src: { value: srcURL, meta: data.src.meta } });\n        });\n    };\n    const formFillFromMeta2 = (info, data, meta) => {\n        if (info.hasDescription && isString(meta.alt)) {\n            data.alt = meta.alt;\n        }\n        if (info.hasAccessibilityOptions) {\n            data.isDecorative = meta.isDecorative || data.isDecorative || false;\n        }\n        if (info.hasImageTitle && isString(meta.title)) {\n            data.title = meta.title;\n        }\n        if (info.hasDimensions) {\n            if (isString(meta.width)) {\n                data.dimensions.width = meta.width;\n            }\n            if (isString(meta.height)) {\n                data.dimensions.height = meta.height;\n            }\n        }\n        if (isString(meta.class)) {\n            ListUtils.findEntry(info.classList, meta.class).each((entry) => {\n                data.classes = entry.value;\n            });\n        }\n        if (info.hasImageCaption) {\n            if (isBoolean(meta.caption)) {\n                data.caption = meta.caption;\n            }\n        }\n        if (info.hasAdvTab) {\n            if (isString(meta.style)) {\n                data.style = meta.style;\n            }\n            if (isString(meta.vspace)) {\n                data.vspace = meta.vspace;\n            }\n            if (isString(meta.border)) {\n                data.border = meta.border;\n            }\n            if (isString(meta.hspace)) {\n                data.hspace = meta.hspace;\n            }\n            if (isString(meta.borderstyle)) {\n                data.borderstyle = meta.borderstyle;\n            }\n        }\n    };\n    const formFillFromMeta = (info, api) => {\n        const data = api.getData();\n        const meta = data.src.meta;\n        if (meta !== undefined) {\n            const newData = deepMerge({}, data);\n            formFillFromMeta2(info, newData, meta);\n            api.setData(newData);\n        }\n    };\n    const calculateImageSize = (helpers, info, state, api) => {\n        const data = api.getData();\n        const url = data.src.value;\n        const meta = data.src.meta || {};\n        if (!meta.width && !meta.height && info.hasDimensions) {\n            if (isNotEmpty(url)) {\n                helpers.imageSize(url)\n                    .then((size) => {\n                    if (state.open) {\n                        api.setData({ dimensions: size });\n                    }\n                })\n                    // eslint-disable-next-line no-console\n                    .catch((e) => console.error(e));\n            }\n            else {\n                api.setData({ dimensions: { width: '', height: '' } });\n            }\n        }\n    };\n    const updateImagesDropdown = (info, state, api) => {\n        const data = api.getData();\n        const image = ListUtils.findEntry(info.imageList, data.src.value);\n        state.prevImage = image;\n        api.setData({ images: image.map((entry) => entry.value).getOr('') });\n    };\n    const changeSrc = (helpers, info, state, api) => {\n        addPrependUrl(info, api);\n        formFillFromMeta(info, api);\n        calculateImageSize(helpers, info, state, api);\n        updateImagesDropdown(info, state, api);\n    };\n    const changeImages = (helpers, info, state, api) => {\n        const data = api.getData();\n        const image = ListUtils.findEntry(info.imageList, data.images);\n        image.each((img) => {\n            const updateAlt = data.alt === '' || state.prevImage.map((image) => image.text === data.alt).getOr(false);\n            if (updateAlt) {\n                if (img.value === '') {\n                    api.setData({ src: img, alt: state.prevAlt });\n                }\n                else {\n                    api.setData({ src: img, alt: img.text });\n                }\n            }\n            else {\n                api.setData({ src: img });\n            }\n        });\n        state.prevImage = image;\n        changeSrc(helpers, info, state, api);\n    };\n    const changeFileInput = (helpers, info, state, api) => {\n        const data = api.getData();\n        api.block('Uploading image'); // What msg do we pass to the lock?\n        head(data.fileinput)\n            .fold(() => {\n            api.unblock();\n        }, (file) => {\n            const blobUri = URL.createObjectURL(file);\n            const finalize = () => {\n                api.unblock();\n                URL.revokeObjectURL(blobUri);\n            };\n            const updateSrcAndSwitchTab = (url) => {\n                api.setData({ src: { value: url, meta: {} } });\n                api.showTab('general');\n                changeSrc(helpers, info, state, api);\n                api.focus('src');\n            };\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            blobToDataUri(file).then((dataUrl) => {\n                const blobInfo = helpers.createBlobCache(file, blobUri, dataUrl);\n                if (info.automaticUploads) {\n                    helpers.uploadImage(blobInfo).then((result) => {\n                        updateSrcAndSwitchTab(result.url);\n                        finalize();\n                    }).catch((err) => {\n                        finalize();\n                        helpers.alertErr(err, () => {\n                            api.focus('fileinput');\n                        });\n                    });\n                }\n                else {\n                    helpers.addToBlobCache(blobInfo);\n                    updateSrcAndSwitchTab(blobInfo.blobUri());\n                    api.unblock();\n                }\n            });\n        });\n    };\n    const changeHandler = (helpers, info, state) => (api, evt) => {\n        if (evt.name === 'src') {\n            changeSrc(helpers, info, state, api);\n        }\n        else if (evt.name === 'images') {\n            changeImages(helpers, info, state, api);\n        }\n        else if (evt.name === 'alt') {\n            state.prevAlt = api.getData().alt;\n        }\n        else if (evt.name === 'fileinput') {\n            changeFileInput(helpers, info, state, api);\n        }\n        else if (evt.name === 'isDecorative') {\n            api.setEnabled('alt', !api.getData().isDecorative);\n        }\n    };\n    const closeHandler = (state) => () => {\n        state.open = false;\n    };\n    const makeDialogBody = (info) => {\n        if (info.hasAdvTab || info.hasUploadUrl || info.hasUploadHandler) {\n            const tabPanel = {\n                type: 'tabpanel',\n                tabs: flatten([\n                    [MainTab.makeTab(info)],\n                    info.hasAdvTab ? [AdvTab.makeTab(info)] : [],\n                    info.hasUploadTab && (info.hasUploadUrl || info.hasUploadHandler) ? [UploadTab.makeTab(info)] : []\n                ])\n            };\n            return tabPanel;\n        }\n        else {\n            const panel = {\n                type: 'panel',\n                items: MainTab.makeItems(info)\n            };\n            return panel;\n        }\n    };\n    const submitHandler = (editor, info, helpers) => (api) => {\n        const data = deepMerge(fromImageData(info.image), api.getData());\n        // The data architecture relies on passing everything through the style field for validation.\n        // Since the style field was removed that process must be simulated on submit.\n        const finalData = {\n            ...data,\n            style: getStyleValue(helpers.normalizeCss, toImageData(data, false))\n        };\n        editor.execCommand('mceUpdateImage', false, toImageData(finalData, info.hasAccessibilityOptions));\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        editor.editorUpload.uploadImagesAuto();\n        api.close();\n    };\n    const imageSize = (editor) => (url) => {\n        // If the URL isn't safe then don't attempt to load it to get the sizes\n        if (!isSafeImageUrl(editor, url)) {\n            return Promise.resolve({ width: '', height: '' });\n        }\n        else {\n            return getImageSize(editor.documentBaseURI.toAbsolute(url)).then((dimensions) => ({\n                width: String(dimensions.width),\n                height: String(dimensions.height)\n            }));\n        }\n    };\n    const createBlobCache = (editor) => (file, blobUri, dataUrl) => {\n        var _a;\n        return editor.editorUpload.blobCache.create({\n            blob: file,\n            blobUri,\n            name: (_a = file.name) === null || _a === void 0 ? void 0 : _a.replace(/\\.[^\\.]+$/, ''),\n            filename: file.name,\n            base64: dataUrl.split(',')[1]\n        });\n    };\n    const addToBlobCache = (editor) => (blobInfo) => {\n        editor.editorUpload.blobCache.add(blobInfo);\n    };\n    const alertErr = (editor) => (message, callback) => {\n        editor.windowManager.alert(message, callback);\n    };\n    const normalizeCss = (editor) => (cssText) => normalizeCss$1(editor, cssText);\n    const parseStyle = (editor) => (cssText) => editor.dom.parseStyle(cssText);\n    const serializeStyle = (editor) => (stylesArg, name) => editor.dom.serializeStyle(stylesArg, name);\n    const uploadImage = (editor) => (blobInfo) => global$1(editor).upload([blobInfo], false).then((results) => {\n        var _a;\n        if (results.length === 0) {\n            return Promise.reject('Failed to upload image');\n        }\n        else if (results[0].status === false) {\n            return Promise.reject((_a = results[0].error) === null || _a === void 0 ? void 0 : _a.message);\n        }\n        else {\n            return results[0];\n        }\n    });\n    const Dialog = (editor) => {\n        const helpers = {\n            imageSize: imageSize(editor),\n            addToBlobCache: addToBlobCache(editor),\n            createBlobCache: createBlobCache(editor),\n            alertErr: alertErr(editor),\n            normalizeCss: normalizeCss(editor),\n            parseStyle: parseStyle(editor),\n            serializeStyle: serializeStyle(editor),\n            uploadImage: uploadImage(editor)\n        };\n        const open = () => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            collect(editor)\n                .then((info) => {\n                const state = createState(info);\n                return {\n                    title: 'Insert/Edit Image',\n                    size: 'normal',\n                    body: makeDialogBody(info),\n                    buttons: [\n                        {\n                            type: 'cancel',\n                            name: 'cancel',\n                            text: 'Cancel'\n                        },\n                        {\n                            type: 'submit',\n                            name: 'save',\n                            text: 'Save',\n                            primary: true\n                        }\n                    ],\n                    initialData: fromImageData(info.image),\n                    onSubmit: submitHandler(editor, info, helpers),\n                    onChange: changeHandler(helpers, info, state),\n                    onClose: closeHandler(state)\n                };\n            })\n                .then(editor.windowManager.open);\n        };\n        return {\n            open\n        };\n    };\n\n    const register$1 = (editor) => {\n        editor.addCommand('mceImage', Dialog(editor).open);\n        // TODO: This command is likely to be short lived we only need it until we expose the rtc model though a new api so it shouldn't be documented\n        // it's just a command since that is a convenient method for the rtc plugin to override the default dom mutation behaviour\n        editor.addCommand('mceUpdateImage', (_ui, data) => {\n            editor.undoManager.transact(() => insertOrUpdateImage(editor, data));\n        });\n    };\n\n    const hasImageClass = (node) => {\n        const className = node.attr('class');\n        return isNonNullable(className) && /\\bimage\\b/.test(className);\n    };\n    const toggleContentEditableState = (state) => (nodes) => {\n        let i = nodes.length;\n        const toggleContentEditable = (node) => {\n            node.attr('contenteditable', state ? 'true' : null);\n        };\n        while (i--) {\n            const node = nodes[i];\n            if (hasImageClass(node)) {\n                node.attr('contenteditable', state ? 'false' : null);\n                global.each(node.getAll('figcaption'), toggleContentEditable);\n            }\n        }\n    };\n    const setup = (editor) => {\n        editor.on('PreInit', () => {\n            editor.parser.addNodeFilter('figure', toggleContentEditableState(true));\n            editor.serializer.addNodeFilter('figure', toggleContentEditableState(false));\n        });\n    };\n\n    const onSetupEditable = (editor) => (api) => {\n        const nodeChanged = () => {\n            api.setEnabled(editor.selection.isEditable());\n        };\n        editor.on('NodeChange', nodeChanged);\n        nodeChanged();\n        return () => {\n            editor.off('NodeChange', nodeChanged);\n        };\n    };\n    const register = (editor) => {\n        editor.ui.registry.addToggleButton('image', {\n            icon: 'image',\n            tooltip: 'Insert/edit image',\n            onAction: Dialog(editor).open,\n            onSetup: (buttonApi) => {\n                // Set the initial state and then bind to selection changes to update the state when the selection changes\n                buttonApi.setActive(isNonNullable(getSelectedImage(editor)));\n                const unbindSelectorChanged = editor.selection.selectorChangedWithUnbind('img:not([data-mce-object]):not([data-mce-placeholder]),figure.image', buttonApi.setActive).unbind;\n                const unbindEditable = onSetupEditable(editor)(buttonApi);\n                return () => {\n                    unbindSelectorChanged();\n                    unbindEditable();\n                };\n            }\n        });\n        editor.ui.registry.addMenuItem('image', {\n            icon: 'image',\n            text: 'Image...',\n            onAction: Dialog(editor).open,\n            onSetup: onSetupEditable(editor)\n        });\n        editor.ui.registry.addContextMenu('image', {\n            update: (element) => editor.selection.isEditable() && (isFigure(element) || (isImage(element) && !isPlaceholderImage(element))) ? ['image'] : []\n        });\n    };\n\n    var Plugin = () => {\n        global$4.add('image', (editor) => {\n            register$2(editor);\n            setup(editor);\n            register(editor);\n            register$1(editor);\n        });\n    };\n\n    Plugin();\n    /** *****\n     * DO NOT EXPORT ANYTHING\n     *\n     * IF YOU DO ROLLUP WILL LEAVE A GLOBAL ON THE PAGE\n     *******/\n\n})();\n", "// Exports the \"image\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/image')\n//   ES2015:\n//     import 'tinymce/plugins/image'\nrequire('./plugin.js');"],
  "mappings": "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",
  "names": ["normalizeCss", "name", "set", "image", "list", "updateAlt"]
}
