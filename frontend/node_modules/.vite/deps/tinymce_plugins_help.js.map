{
  "version": 3,
  "sources": ["../../tinymce/plugins/help/plugin.js", "../../tinymce/plugins/help/index.js"],
  "sourcesContent": ["/**\n * TinyMCE version 7.9.1 (2025-05-29)\n */\n\n(function () {\n    'use strict';\n\n    /* eslint-disable @typescript-eslint/no-wrapper-object-types */\n    const hasProto = (v, constructor, predicate) => {\n        var _a;\n        if (predicate(v, constructor.prototype)) {\n            return true;\n        }\n        else {\n            // String-based fallback time\n            return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n        }\n    };\n    const typeOf = (x) => {\n        const t = typeof x;\n        if (x === null) {\n            return 'null';\n        }\n        else if (t === 'object' && Array.isArray(x)) {\n            return 'array';\n        }\n        else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n            return 'string';\n        }\n        else {\n            return t;\n        }\n    };\n    const isType = (type) => (value) => typeOf(value) === type;\n    const isSimpleType = (type) => (value) => typeof value === type;\n    const eq = (t) => (a) => t === a;\n    const isString = isType('string');\n    const isUndefined = eq(undefined);\n    const isNullable = (a) => a === null || a === undefined;\n    const isNonNullable = (a) => !isNullable(a);\n    const isFunction = isSimpleType('function');\n\n    const constant = (value) => {\n        return () => {\n            return value;\n        };\n    };\n    const never = constant(false);\n\n    /**\n     * The `Optional` type represents a value (of any type) that potentially does\n     * not exist. Any `Optional<T>` can either be a `Some<T>` (in which case the\n     * value does exist) or a `None` (in which case the value does not exist). This\n     * module defines a whole lot of FP-inspired utility functions for dealing with\n     * `Optional` objects.\n     *\n     * Comparison with null or undefined:\n     * - We don't get fancy null coalescing operators with `Optional`\n     * - We do get fancy helper functions with `Optional`\n     * - `Optional` support nesting, and allow for the type to still be nullable (or\n     * another `Optional`)\n     * - There is no option to turn off strict-optional-checks like there is for\n     * strict-null-checks\n     */\n    class Optional {\n        // The internal representation has a `tag` and a `value`, but both are\n        // private: able to be console.logged, but not able to be accessed by code\n        constructor(tag, value) {\n            this.tag = tag;\n            this.value = value;\n        }\n        // --- Identities ---\n        /**\n         * Creates a new `Optional<T>` that **does** contain a value.\n         */\n        static some(value) {\n            return new Optional(true, value);\n        }\n        /**\n         * Create a new `Optional<T>` that **does not** contain a value. `T` can be\n         * any type because we don't actually have a `T`.\n         */\n        static none() {\n            return Optional.singletonNone;\n        }\n        /**\n         * Perform a transform on an `Optional` type. Regardless of whether this\n         * `Optional` contains a value or not, `fold` will return a value of type `U`.\n         * If this `Optional` does not contain a value, the `U` will be created by\n         * calling `onNone`. If this `Optional` does contain a value, the `U` will be\n         * created by calling `onSome`.\n         *\n         * For the FP enthusiasts in the room, this function:\n         * 1. Could be used to implement all of the functions below\n         * 2. Forms a catamorphism\n         */\n        fold(onNone, onSome) {\n            if (this.tag) {\n                return onSome(this.value);\n            }\n            else {\n                return onNone();\n            }\n        }\n        /**\n         * Determine if this `Optional` object contains a value.\n         */\n        isSome() {\n            return this.tag;\n        }\n        /**\n         * Determine if this `Optional` object **does not** contain a value.\n         */\n        isNone() {\n            return !this.tag;\n        }\n        // --- Functor (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value. If\n         * you provide a function to turn a T into a U, this is the function you use\n         * to turn an `Optional<T>` into an `Optional<U>`. If this **does** contain\n         * a value then the output will also contain a value (that value being the\n         * output of `mapper(this.value)`), and if this **does not** contain a value\n         * then neither will the output.\n         */\n        map(mapper) {\n            if (this.tag) {\n                return Optional.some(mapper(this.value));\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Monad (name stolen from Haskell / maths) ---\n        /**\n         * Perform a transform on an `Optional` object, **if** there is a value.\n         * Unlike `map`, here the transform itself also returns an `Optional`.\n         */\n        bind(binder) {\n            if (this.tag) {\n                return binder(this.value);\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Traversable (name stolen from Haskell / maths) ---\n        /**\n         * For a given predicate, this function finds out if there **exists** a value\n         * inside this `Optional` object that meets the predicate. In practice, this\n         * means that for `Optional`s that do not contain a value it returns false (as\n         * no predicate-meeting value exists).\n         */\n        exists(predicate) {\n            return this.tag && predicate(this.value);\n        }\n        /**\n         * For a given predicate, this function finds out if **all** the values inside\n         * this `Optional` object meet the predicate. In practice, this means that\n         * for `Optional`s that do not contain a value it returns true (as all 0\n         * objects do meet the predicate).\n         */\n        forall(predicate) {\n            return !this.tag || predicate(this.value);\n        }\n        filter(predicate) {\n            if (!this.tag || predicate(this.value)) {\n                return this;\n            }\n            else {\n                return Optional.none();\n            }\n        }\n        // --- Getters ---\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.\n         */\n        getOr(replacement) {\n            return this.tag ? this.value : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value.  Unlike `getOr`, in this method the `replacement` object is also\n         * `Optional` - meaning that this method will always return an `Optional`.\n         */\n        or(replacement) {\n            return this.tag ? this : replacement;\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided `Optional` object does not contain a\n         * value. Unlike `getOr`, in this method the `replacement` value is\n         * \"thunked\" - that is to say that you don't pass a value to `getOrThunk`, you\n         * pass a function which (if called) will **return** the `value` you want to\n         * use.\n         */\n        getOrThunk(thunk) {\n            return this.tag ? this.value : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, using a default\n         * `replacement` value if the provided Optional object does not contain a\n         * value.\n         *\n         * Unlike `or`, in this method the `replacement` value is \"thunked\" - that is\n         * to say that you don't pass a value to `orThunk`, you pass a function which\n         * (if called) will **return** the `value` you want to use.\n         *\n         * Unlike `getOrThunk`, in this method the `replacement` value is also\n         * `Optional`, meaning that this method will always return an `Optional`.\n         */\n        orThunk(thunk) {\n            return this.tag ? this : thunk();\n        }\n        /**\n         * Get the value out of the inside of the `Optional` object, throwing an\n         * exception if the provided `Optional` object does not contain a value.\n         *\n         * WARNING:\n         * You should only be using this function if you know that the `Optional`\n         * object **is not** empty (otherwise you're throwing exceptions in production\n         * code, which is bad).\n         *\n         * In tests this is more acceptable.\n         *\n         * Prefer other methods to this, such as `.each`.\n         */\n        getOrDie(message) {\n            if (!this.tag) {\n                throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n            }\n            else {\n                return this.value;\n            }\n        }\n        // --- Interop with null and undefined ---\n        /**\n         * Creates an `Optional` value from a nullable (or undefined-able) input.\n         * Null, or undefined, is converted to `None`, and anything else is converted\n         * to `Some`.\n         */\n        static from(value) {\n            return isNonNullable(value) ? Optional.some(value) : Optional.none();\n        }\n        /**\n         * Converts an `Optional` to a nullable type, by getting the value if it\n         * exists, or returning `null` if it does not.\n         */\n        getOrNull() {\n            return this.tag ? this.value : null;\n        }\n        /**\n         * Converts an `Optional` to an undefined-able type, by getting the value if\n         * it exists, or returning `undefined` if it does not.\n         */\n        getOrUndefined() {\n            return this.value;\n        }\n        // --- Utilities ---\n        /**\n         * If the `Optional` contains a value, perform an action on that value.\n         * Unlike the rest of the methods on this type, `.each` has side-effects. If\n         * you want to transform an `Optional<T>` **into** something, then this is not\n         * the method for you. If you want to use an `Optional<T>` to **do**\n         * something, then this is the method for you - provided you're okay with not\n         * doing anything in the case where the `Optional` doesn't have a value inside\n         * it. If you're not sure whether your use-case fits into transforming\n         * **into** something or **doing** something, check whether it has a return\n         * value. If it does, you should be performing a transform.\n         */\n        each(worker) {\n            if (this.tag) {\n                worker(this.value);\n            }\n        }\n        /**\n         * Turn the `Optional` object into an array that contains all of the values\n         * stored inside the `Optional`. In practice, this means the output will have\n         * either 0 or 1 elements.\n         */\n        toArray() {\n            return this.tag ? [this.value] : [];\n        }\n        /**\n         * Turn the `Optional` object into a string for debugging or printing. Not\n         * recommended for production code, but good for debugging. Also note that\n         * these days an `Optional` object can be logged to the console directly, and\n         * its inner value (if it exists) will be visible.\n         */\n        toString() {\n            return this.tag ? `some(${this.value})` : 'none()';\n        }\n    }\n    // Sneaky optimisation: every instance of Optional.none is identical, so just\n    // reuse the same object\n    Optional.singletonNone = new Optional(false);\n\n    /* eslint-disable @typescript-eslint/unbound-method */\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    /* eslint-enable */\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains = (xs, x) => rawIndexOf(xs, x) > -1;\n    const map = (xs, f) => {\n        // pre-allocating array size when it's guaranteed to be known\n        // http://jsperf.com/push-allocated-vs-dynamic/22\n        const len = xs.length;\n        const r = new Array(len);\n        for (let i = 0; i < len; i++) {\n            const x = xs[i];\n            r[i] = f(x, i);\n        }\n        return r;\n    };\n    const filter = (xs, pred) => {\n        const r = [];\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            if (pred(x, i)) {\n                r.push(x);\n            }\n        }\n        return r;\n    };\n    const findUntil = (xs, pred, until) => {\n        for (let i = 0, len = xs.length; i < len; i++) {\n            const x = xs[i];\n            if (pred(x, i)) {\n                return Optional.some(x);\n            }\n            else if (until(x, i)) {\n                break;\n            }\n        }\n        return Optional.none();\n    };\n    const find = (xs, pred) => {\n        return findUntil(xs, pred, never);\n    };\n    const sort = (xs, comparator) => {\n        const copy = nativeSlice.call(xs, 0);\n        copy.sort(comparator);\n        return copy;\n    };\n    isFunction(Array.from) ? Array.from : (x) => nativeSlice.call(x);\n\n    // There are many variations of Object iteration that are faster than the 'for-in' style:\n    // http://jsperf.com/object-keys-iteration/107\n    //\n    // Use the native keys if it is available (IE9+), otherwise fall back to manually filtering\n    const keys = Object.keys;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const hasOwnProperty = Object.hasOwnProperty;\n    const get$1 = (obj, key) => {\n        return has(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n\n    const Cell = (initial) => {\n        let value = initial;\n        const get = () => {\n            return value;\n        };\n        const set = (v) => {\n            value = v;\n        };\n        return {\n            get,\n            set\n        };\n    };\n\n    /**\n     * Adds two numbers, and wrap to a range.\n     * If the result overflows to the right, snap to the left.\n     * If the result overflows to the left, snap to the right.\n     */\n    // the division is meant to get a number between 0 and 1 for more information check this discussion: https://stackoverflow.com/questions/58285941/how-to-replace-math-random-with-crypto-getrandomvalues-and-keep-same-result\n    const random = () => window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\n\n    /**\n     * Generate a unique identifier.\n     *\n     * The unique portion of the identifier only contains an underscore\n     * and digits, so that it may safely be used within HTML attributes.\n     *\n     * The chance of generating a non-unique identifier has been minimized\n     * by combining the current time, a random number and a one-up counter.\n     *\n     * generate :: String -> String\n     */\n    let unique = 0;\n    const generate = (prefix) => {\n        const date = new Date();\n        const time = date.getTime();\n        const random$1 = Math.floor(random() * 1000000000);\n        unique++;\n        return prefix + '_' + random$1 + unique + String(time);\n    };\n\n    const cat = (arr) => {\n        const r = [];\n        const push = (x) => {\n            r.push(x);\n        };\n        for (let i = 0; i < arr.length; i++) {\n            arr[i].each(push);\n        }\n        return r;\n    };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    const get = (customTabs) => {\n        const addTab = (spec) => {\n            var _a;\n            const name = (_a = spec.name) !== null && _a !== void 0 ? _a : generate('tab-name');\n            const currentCustomTabs = customTabs.get();\n            currentCustomTabs[name] = spec;\n            customTabs.set(currentCustomTabs);\n        };\n        return {\n            addTab\n        };\n    };\n\n    const register$2 = (editor, dialogOpener) => {\n        editor.addCommand('mceHelp', dialogOpener);\n    };\n\n    const option = (name) => (editor) => editor.options.get(name);\n    const register$1 = (editor) => {\n        const registerOption = editor.options.register;\n        registerOption('help_tabs', {\n            processor: 'array'\n        });\n    };\n    const getHelpTabs = option('help_tabs');\n    const getForcedPlugins = option('forced_plugins');\n\n    const register = (editor, dialogOpener) => {\n        editor.ui.registry.addButton('help', {\n            icon: 'help',\n            tooltip: 'Help',\n            onAction: dialogOpener,\n            context: 'any'\n        });\n        editor.ui.registry.addMenuItem('help', {\n            text: 'Help',\n            icon: 'help',\n            shortcut: 'Alt+0',\n            onAction: dialogOpener,\n            context: 'any'\n        });\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Resource');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    const pLoadHtmlByLangCode = (baseUrl, langCode) => global$3.load(`tinymce.html-i18n.help-keynav.${langCode}`, `${baseUrl}/js/i18n/keynav/${langCode}.js`);\n    const pLoadI18nHtml = (baseUrl) => \n    // TINY-9928: Load language file for the current language, or English if the file is not available\n    pLoadHtmlByLangCode(baseUrl, global$2.getCode()).catch(() => pLoadHtmlByLangCode(baseUrl, 'en'));\n    const initI18nLoad = (editor, baseUrl) => {\n        editor.on('init', () => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            pLoadI18nHtml(baseUrl);\n        });\n    };\n\n    const pTab = async (pluginUrl) => {\n        const body = {\n            type: 'htmlpanel',\n            presets: 'document',\n            html: await pLoadI18nHtml(pluginUrl)\n        };\n        return {\n            name: 'keyboardnav',\n            title: 'Keyboard Navigation',\n            items: [body]\n        };\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    // Converts shortcut format to Mac/PC variants\n    const convertText = (source) => {\n        const isMac = global$1.os.isMacOS() || global$1.os.isiOS();\n        const mac = {\n            alt: '&#x2325;',\n            ctrl: '&#x2303;',\n            shift: '&#x21E7;',\n            meta: '&#x2318;',\n            access: '&#x2303;&#x2325;'\n        };\n        const other = {\n            meta: 'Ctrl ',\n            access: 'Shift + Alt '\n        };\n        const replace = isMac ? mac : other;\n        const shortcut = source.split('+');\n        const updated = map(shortcut, (segment) => {\n            // search lowercase, but if not found use the original\n            const search = segment.toLowerCase().trim();\n            return has(replace, search) ? replace[search] : segment;\n        });\n        return isMac ? (updated.join('')).replace(/\\s/, '') : updated.join('+');\n    };\n\n    const shortcuts = [\n        { shortcuts: ['Meta + B'], action: 'Bold' },\n        { shortcuts: ['Meta + I'], action: 'Italic' },\n        { shortcuts: ['Meta + U'], action: 'Underline' },\n        { shortcuts: ['Meta + A'], action: 'Select all' },\n        { shortcuts: ['Meta + Y', 'Meta + Shift + Z'], action: 'Redo' },\n        { shortcuts: ['Meta + Z'], action: 'Undo' },\n        { shortcuts: ['Access + 1'], action: 'Heading 1' },\n        { shortcuts: ['Access + 2'], action: 'Heading 2' },\n        { shortcuts: ['Access + 3'], action: 'Heading 3' },\n        { shortcuts: ['Access + 4'], action: 'Heading 4' },\n        { shortcuts: ['Access + 5'], action: 'Heading 5' },\n        { shortcuts: ['Access + 6'], action: 'Heading 6' },\n        { shortcuts: ['Access + 7'], action: 'Paragraph' },\n        { shortcuts: ['Access + 8'], action: 'Div' },\n        { shortcuts: ['Access + 9'], action: 'Address' },\n        { shortcuts: ['Alt + 0'], action: 'Open help dialog' },\n        { shortcuts: ['Alt + F9'], action: 'Focus to menubar' },\n        { shortcuts: ['Alt + F10'], action: 'Focus to toolbar' },\n        { shortcuts: ['Alt + F11'], action: 'Focus to element path' },\n        { shortcuts: ['Alt + F12'], action: 'Focus to notification' },\n        { shortcuts: ['Ctrl + F9'], action: 'Focus to contextual toolbar' },\n        { shortcuts: ['Shift + Enter'], action: 'Open popup menu for split buttons' },\n        { shortcuts: ['Meta + K'], action: 'Insert link (if link plugin activated)' },\n        { shortcuts: ['Meta + S'], action: 'Save (if save plugin activated)' },\n        { shortcuts: ['Meta + F'], action: 'Find (if searchreplace plugin activated)' },\n        { shortcuts: ['Meta + Shift + F'], action: 'Switch to or from fullscreen mode' }\n    ];\n\n    const tab$2 = () => {\n        const shortcutList = map(shortcuts, (shortcut) => {\n            const shortcutText = map(shortcut.shortcuts, convertText).join(' or ');\n            return [shortcut.action, shortcutText];\n        });\n        const tablePanel = {\n            type: 'table',\n            // TODO: Fix table styles #TINY-2909\n            header: ['Action', 'Shortcut'],\n            cells: shortcutList\n        };\n        return {\n            name: 'shortcuts',\n            title: 'Handy Shortcuts',\n            items: [\n                tablePanel\n            ]\n        };\n    };\n\n    // These lists are automatically sorted when generating the dialog.\n    const urls = map([\n        { key: 'accordion', name: 'Accordion' },\n        { key: 'anchor', name: 'Anchor' },\n        { key: 'autolink', name: 'Autolink' },\n        { key: 'autoresize', name: 'Autoresize' },\n        { key: 'autosave', name: 'Autosave' },\n        { key: 'charmap', name: 'Character Map' },\n        { key: 'code', name: 'Code' },\n        { key: 'codesample', name: 'Code Sample' },\n        { key: 'colorpicker', name: 'Color Picker' },\n        { key: 'directionality', name: 'Directionality' },\n        { key: 'emoticons', name: 'Emoticons' },\n        { key: 'fullscreen', name: 'Full Screen' },\n        { key: 'help', name: 'Help' },\n        { key: 'image', name: 'Image' },\n        { key: 'importcss', name: 'Import CSS' },\n        { key: 'insertdatetime', name: 'Insert Date/Time' },\n        { key: 'link', name: 'Link' },\n        { key: 'lists', name: 'Lists' },\n        { key: 'advlist', name: 'List Styles' },\n        { key: 'media', name: 'Media' },\n        { key: 'nonbreaking', name: 'Nonbreaking' },\n        { key: 'pagebreak', name: 'Page Break' },\n        { key: 'preview', name: 'Preview' },\n        { key: 'quickbars', name: 'Quick Toolbars' },\n        { key: 'save', name: 'Save' },\n        { key: 'searchreplace', name: 'Search and Replace' },\n        { key: 'table', name: 'Table' },\n        { key: 'textcolor', name: 'Text Color' },\n        { key: 'visualblocks', name: 'Visual Blocks' },\n        { key: 'visualchars', name: 'Visual Characters' },\n        { key: 'wordcount', name: 'Word Count' },\n        // TODO: Add other premium plugins when they are included in the website\n        { key: 'a11ychecker', name: 'Accessibility Checker', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'typography', name: 'Advanced Typography', type: \"premium\" /* PluginType.Premium */, slug: 'advanced-typography' },\n        { key: 'ai', name: 'AI Assistant', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'casechange', name: 'Case Change', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'checklist', name: 'Checklist', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'advcode', name: 'Enhanced Code Editor', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'mediaembed', name: 'Enhanced Media Embed', type: \"premium\" /* PluginType.Premium */, slug: 'introduction-to-mediaembed' },\n        { key: 'advtable', name: 'Enhanced Tables', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'exportpdf', name: 'Export to PDF', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'exportword', name: 'Export to Word', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'footnotes', name: 'Footnotes', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'formatpainter', name: 'Format Painter', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'editimage', name: 'Image Editing', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'uploadcare', name: 'Image Optimizer Powered by Uploadcare', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'importword', name: 'Import from Word', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'inlinecss', name: 'Inline CSS', type: \"premium\" /* PluginType.Premium */, slug: 'inline-css' },\n        { key: 'linkchecker', name: 'Link Checker', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'math', name: 'Math', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'markdown', name: 'Markdown', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'mentions', name: 'Mentions', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'mergetags', name: 'Merge Tags', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'pageembed', name: 'Page Embed', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'permanentpen', name: 'Permanent Pen', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'powerpaste', name: 'PowerPaste', type: \"premium\" /* PluginType.Premium */, slug: 'introduction-to-powerpaste' },\n        { key: 'revisionhistory', name: 'Revision History', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'tinymcespellchecker', name: 'Spell Checker', type: \"premium\" /* PluginType.Premium */, slug: 'introduction-to-tiny-spellchecker' },\n        { key: 'autocorrect', name: 'Spelling Autocorrect', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'tableofcontents', name: 'Table of Contents', type: \"premium\" /* PluginType.Premium */ },\n        { key: 'advtemplate', name: 'Templates', type: \"premium\" /* PluginType.Premium */, slug: 'advanced-templates' },\n        { key: 'tinycomments', name: 'Tiny Comments', type: \"premium\" /* PluginType.Premium */, slug: 'introduction-to-tiny-comments' },\n        { key: 'tinydrive', name: 'Tiny Drive', type: \"premium\" /* PluginType.Premium */, slug: 'tinydrive-introduction' },\n    ], (item) => ({\n        ...item,\n        // Set the defaults/fallbacks for the plugin urls\n        type: item.type || \"opensource\" /* PluginType.OpenSource */,\n        slug: item.slug || item.key\n    }));\n\n    const tab$1 = (editor) => {\n        const availablePlugins = () => {\n            const premiumPlugins = filter(urls, ({ type }) => {\n                return type === \"premium\" /* PluginUrls.PluginType.Premium */;\n            });\n            const sortedPremiumPlugins = sort(map(premiumPlugins, (p) => p.name), (s1, s2) => s1.localeCompare(s2));\n            const premiumPluginList = map(sortedPremiumPlugins, (pluginName) => `<li>${pluginName}</li>`).join('');\n            return '<div>' +\n                '<p><b>' + global$2.translate('Premium plugins:') + '</b></p>' +\n                '<ul>' +\n                premiumPluginList +\n                '<li class=\"tox-help__more-link\" \">' +\n                '<a href=\"https://www.tiny.cloud/pricing/?utm_campaign=help_dialog_plugin_tab&utm_source=tiny&utm_medium=referral&utm_term=read_more&utm_content=premium_plugin_heading\" rel=\"noopener\" target=\"_blank\"' +\n                ' data-alloy-tabstop=\"true\" tabindex=\"-1\">' + global$2.translate('Learn more...') + '</a></li>' +\n                '</ul>' +\n                '</div>';\n        };\n        const makeLink = (p) => `<a data-alloy-tabstop=\"true\" tabindex=\"-1\" href=\"${p.url}\" target=\"_blank\" rel=\"noopener\">${p.name}</a>`;\n        const identifyUnknownPlugin = (editor, key) => {\n            const getMetadata = editor.plugins[key].getMetadata;\n            if (isFunction(getMetadata)) {\n                const metadata = getMetadata();\n                return { name: metadata.name, html: makeLink(metadata) };\n            }\n            else {\n                return { name: key, html: key };\n            }\n        };\n        const getPluginData = (editor, key) => find(urls, (x) => {\n            return x.key === key;\n        }).fold(() => {\n            return identifyUnknownPlugin(editor, key);\n        }, (x) => {\n            // We know this plugin, so use our stored details.\n            const name = x.type === \"premium\" /* PluginUrls.PluginType.Premium */ ? `${x.name}*` : x.name;\n            const html = makeLink({ name, url: `https://www.tiny.cloud/docs/tinymce/7/${x.slug}/` });\n            return { name, html };\n        });\n        const getPluginKeys = (editor) => {\n            const keys$1 = keys(editor.plugins);\n            const forcedPlugins = getForcedPlugins(editor);\n            const hiddenPlugins = isUndefined(forcedPlugins) ? ['onboarding'] : forcedPlugins.concat(['onboarding']);\n            return filter(keys$1, (k) => !contains(hiddenPlugins, k));\n        };\n        const pluginLister = (editor) => {\n            const pluginKeys = getPluginKeys(editor);\n            const sortedPluginData = sort(map(pluginKeys, (k) => getPluginData(editor, k)), (pd1, pd2) => pd1.name.localeCompare(pd2.name));\n            const pluginLis = map(sortedPluginData, (key) => {\n                return '<li>' + key.html + '</li>';\n            });\n            const count = pluginLis.length;\n            const pluginsString = pluginLis.join('');\n            const html = '<p><b>' + global$2.translate(['Plugins installed ({0}):', count]) + '</b></p>' +\n                '<ul>' + pluginsString + '</ul>';\n            return html;\n        };\n        const installedPlugins = (editor) => {\n            if (editor == null) {\n                return '';\n            }\n            return '<div>' +\n                pluginLister(editor) +\n                '</div>';\n        };\n        const htmlPanel = {\n            type: 'htmlpanel',\n            presets: 'document',\n            html: [\n                installedPlugins(editor),\n                availablePlugins()\n            ].join('')\n        };\n        return {\n            name: 'plugins',\n            title: 'Plugins',\n            items: [\n                htmlPanel\n            ]\n        };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    const tab = () => {\n        const getVersion = (major, minor) => major.indexOf('@') === 0 ? 'X.X.X' : major + '.' + minor;\n        const version = getVersion(global.majorVersion, global.minorVersion);\n        const changeLogLink = '<a data-alloy-tabstop=\"true\" tabindex=\"-1\" href=\"https://www.tiny.cloud/docs/tinymce/7/changelog/?utm_campaign=help_dialog_version_tab&utm_source=tiny&utm_medium=referral\" rel=\"noopener\" target=\"_blank\">TinyMCE ' + version + '</a>';\n        const htmlPanel = {\n            type: 'htmlpanel',\n            html: '<p>' + global$2.translate(['You are using {0}', changeLogLink]) + '</p>',\n            presets: 'document'\n        };\n        return {\n            name: 'versions',\n            title: 'Version',\n            items: [\n                htmlPanel\n            ]\n        };\n    };\n\n    const parseHelpTabsSetting = (tabsFromSettings, tabs) => {\n        const newTabs = {};\n        const names = map(tabsFromSettings, (t) => {\n            var _a;\n            if (isString(t)) {\n                // Code below shouldn't care if a tab name doesn't have a spec.\n                // If we find it does, we'll need to make this smarter.\n                // CustomTabsTest has a case for this.\n                if (has(tabs, t)) {\n                    newTabs[t] = tabs[t];\n                }\n                return t;\n            }\n            else {\n                const name = (_a = t.name) !== null && _a !== void 0 ? _a : generate('tab-name');\n                newTabs[name] = t;\n                return name;\n            }\n        });\n        return { tabs: newTabs, names };\n    };\n    const getNamesFromTabs = (tabs) => {\n        const names = keys(tabs);\n        // Move the versions tab to the end if it exists\n        const idx = names.indexOf('versions');\n        if (idx !== -1) {\n            names.splice(idx, 1);\n            names.push('versions');\n        }\n        return { tabs, names };\n    };\n    const pParseCustomTabs = async (editor, customTabs, pluginUrl) => {\n        const shortcuts = tab$2();\n        const nav = await pTab(pluginUrl);\n        const plugins = tab$1(editor);\n        const versions = tab();\n        const tabs = {\n            [shortcuts.name]: shortcuts,\n            [nav.name]: nav,\n            [plugins.name]: plugins,\n            [versions.name]: versions,\n            ...customTabs.get()\n        };\n        return Optional.from(getHelpTabs(editor)).fold(() => getNamesFromTabs(tabs), (tabsFromSettings) => parseHelpTabsSetting(tabsFromSettings, tabs));\n    };\n    const init = (editor, customTabs, pluginUrl) => () => {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        pParseCustomTabs(editor, customTabs, pluginUrl).then(({ tabs, names }) => {\n            const foundTabs = map(names, (name) => get$1(tabs, name));\n            const dialogTabs = cat(foundTabs);\n            const body = {\n                type: 'tabpanel',\n                tabs: dialogTabs\n            };\n            editor.windowManager.open({\n                title: 'Help',\n                size: 'medium',\n                body,\n                buttons: [\n                    {\n                        type: 'cancel',\n                        name: 'close',\n                        text: 'Close',\n                        primary: true\n                    }\n                ],\n                initialData: {}\n            });\n        });\n    };\n\n    var Plugin = () => {\n        global$4.add('help', (editor, pluginUrl) => {\n            const customTabs = Cell({});\n            const api = get(customTabs);\n            register$1(editor);\n            const dialogOpener = init(editor, customTabs, pluginUrl);\n            register(editor, dialogOpener);\n            register$2(editor, dialogOpener);\n            editor.shortcuts.add('Alt+0', 'Open help dialog', 'mceHelp');\n            initI18nLoad(editor, pluginUrl);\n            return api;\n        });\n    };\n\n    Plugin();\n    /** *****\n     * DO NOT EXPORT ANYTHING\n     *\n     * IF YOU DO ROLLUP WILL LEAVE A GLOBAL ON THE PAGE\n     *******/\n\n})();\n", "// Exports the \"help\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/help')\n//   ES2015:\n//     import 'tinymce/plugins/help'\nrequire('./plugin.js');"],
  "mappings": "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",
  "names": ["get", "editor", "shortcuts"]
}
